{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-cara-src-templates-cara-tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkO;AACnM;AACoC;AACnE;AACA;AACA;AACA;AACA,qCAAqC,kEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wEAAkB;AACvC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wEAAkB;AACzC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAQ;AACZ;AACA;AACA,QAAQ,SAAS,mEAAa;AAC9B,sBAAsB,mEAAa;AACnC,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8DAAQ;AACd;AACA;AACA;AACA;AACA;AACA,oCAAoC,mEAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sEAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,+CAA+C,wDAAM,0BAA0B,sEAAgB;AAC/F;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAM;AAC7B,SAAS,iDAAU;AACnB,wBAAwB,6CAAM;AAC9B,+BAA+B,kDAAW;AAC1C;AACA,KAAK;AACL;AACA,wBAAwB,oEAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6CAAM;AAC9B,IAAI,qEAAe;AACnB;AACA;AACA,MAAM,0DAAI,cAAc,sEAAgB;AACxC;AACA;AACA,QAAQ,0DAAI,2BAA2B,yEAAmB;AAC1D,QAAQ,4DAAU;AAClB;AACA,KAAK;AACL,IAAI,gDAAS;AACb,IAAI,6DAAO;AACX;AACA,MAAM,0DAAI,uBAAuB,yEAAmB;AACpD,KAAK;AACL;AACA,WAAW,gDAAmB,uBAAuB;AACrD;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA,MAAM;AACN;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA,EAAE,8DAAQ;AACV,QAAQ,wDAAM;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAM,qBAAqB,wDAAM,sCAAsC,wDAAM;AAC3G;AACiK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChX+P;AAC7V;AACpC;AAC+B;AACgE;AACjF;AACK;AAClD;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA,wEAAwE,wDAAM,uBAAuB,6DAAO;AAC5G,mCAAmC,wDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAQ;AACV;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,UAAU,mEAAa;AACvB,SAAS,wDAAM,mCAAmC,sEAAgB,UAAU,kFAAgC;AAC5G;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM,QAAQ,wDAAM,QAAQ,wDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,qEAAe;AACjB;AACA;AACA,MAAM,0DAAI;AACV;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,UAAU,0DAAI;AACd,YAAY,0DAAI;AAChB;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM,0DAAI;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,YAAY,0DAAI,2BAA2B,0DAAI;AAC/C;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,OAAO,wDAAM;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAM;AACb;AACA,IAAI;AACJ,6BAA6B,wDAAM,oBAAoB,wDAAM;AAC7D;AACA,4BAA4B,wDAAM,sBAAsB,wDAAM,oBAAoB,wDAAM;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,WAAW,wDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yDAAO;AACpC;AACA;AACA;AACA,wBAAwB,uEAAqB;AAC7C;AACA,kBAAkB,gEAAc;AAChC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uEAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAM,oBAAoB,qBAAqB;AACrE;AACA,SAAS;AACT;AACA,QAAQ,8DAAQ;AAChB,cAAc,wDAAM;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAM;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd,MAAM,oEAAkB;AACxB;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE,2DAAK;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAW;AAC5B;AACA;AACA;AACA;AACA,WAAW,4DAAU;AACrB;AACA;AACA;AACA,IAAI,0EAAoB;AACxB,WAAW,4DAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM,gEAAc;AACpB;AACA;AACA,IAAI,wEAAkB;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM,WAAW,wDAAM;AAChC,oBAAoB,wDAAM,oBAAoB,qBAAqB;AACnE;AACA,OAAO;AACP;AACA,UAAU,wDAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mEAAa;AACxB;AACA;AACA;AACA,iBAAiB,mEAAW;AAC5B,2BAA2B,iEAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB,kEAAU;AAC9B;AACA,oBAAoB,mEAAa;AACjC,iBAAiB,6DAAO,CAAC,mEAAa;AACtC;AACA;AACA;AACA;AACA,qCAAqC,kEAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wDAAM;AAC/D;AACA;AACA,aAAa,wDAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,iCAAiC,wDAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,mEAAW;AAC5B;AACA;AACA;AACA,uBAAuB,mEAAa;AACpC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI,oEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM,oEAAkB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAM;AACf,eAAe,wDAAM,uBAAuB;AAC5C;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI,oEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mEAAa;AAC1B;AACA,WAAW,wDAAM;AACjB;AACA,QAAQ,UAAU,mEAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAU;AACtB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAU;AACtB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAM;AAC7B,yBAAyB,wDAAM;AAC/B;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,wDAAwD,wDAAM;AAC9D;AACA;AACA;AACA;AACA,4BAA4B,6DAAO;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,mEAAa;AACxB,0BAA0B,6DAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mEAAW;AAC1B;AACA,iBAAiB,wDAAM;AACvB;AACA;AACA;AACA,kBAAkB,wDAAM,iDAAiD,wDAAM;AAC/E;AACA;AACA,yBAAyB,wDAAM,UAAU,wDAAM,UAAU,sEAAgB;AACzE;AACA;AACA;AACA,uBAAuB,uEAAe;AACtC;AACA;AACA;AACA;AACA,UAAU,2CAA2C,uBAAuB,MAAM,cAAc;AAChG;AACA;AACA;AACA;AACA,kBAAkB,mEAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAO;AAC1B;AACA;AACA;AACA,WAAW,6DAAO,8CAA8C,6DAAO,0BAA0B,6DAAO;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAa;AAClC;AACA,wBAAwB,mEAAa,0BAA0B,kEAAc,SAAS,6DAAO;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ,0DAAI;AACZ;AACA,QAAQ,gEAAU;AAClB;AACA;AACA;AACA,0BAA0B,oEAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ;AACR;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uEAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAU,uEAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ,mEAAa;AACrB,MAAM,sEAAgB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ,mEAAa;AACrB,MAAM,yEAAmB;AACzB;AACA;AACA;AACA;AACA,kBAAkB,mEAAa;AAC/B;AACA,SAAS,wDAAM;AACf,sBAAsB,mEAAW;AACjC;AACA,uBAAuB,6DAAO;AAC9B,yBAAyB,uEAAe;AACxC;AACA;AACA,UAAU,mEAAW;AACrB,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU,oEAAkB;AAC5B;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,mEAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAW,aAAa,mEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uEAAqB;AAC7B;AACA,MAAM;AACN,MAAM,iEAAe;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAI;AACV;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM,wEAAkB;AACxB;AACA;AACA,OAAO;AACP;AACA,MAAM,gEAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,MAAM,wDAAM;AACZ,MAAM,wDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,cAAc,6DAAO;AACrB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAI,CAAC,6DAAO;AAClB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM,0DAAI,CAAC,6DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM,0DAAI,CAAC,6DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAK;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAK;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,2DAAK;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,IAAI,6DAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,wDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAM,QAAQ,wDAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,MAAM,0DAAI;AACV;AACA;AACA,YAAY,wDAAM;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAU;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAI;AACnB,gBAAgB,sDAAI;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oEAAkB;AACtB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,IAAI,0DAAI,CAAC,6DAAO;AAChB,UAAU,wDAAM;AAChB;AACA;AACA;AACA,WAAW,wDAAM;AACjB,2BAA2B;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAQ;AACV;AACA;AACA,MAAM,sEAAgB;AACtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sEAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE,0DAAI;AACN;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,iDAAU;AAC9B;AACA;AACA,UAAU,gEAAU;AACpB;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,SAAS,gDAAmB;AAC5B;AACA,GAAG;AACH;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,wBAAwB,gDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yEAAmB;AACvB;AACA,IAAI,0DAAI;AACR,UAAU,wDAAM;AAChB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR,UAAU,wDAAM;AAChB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,WAAW,wDAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAM;AACxB;AACA,cAAc,8CAAO;AACrB,mBAAmB,6CAAM;AACzB,sBAAsB,oEAAc;AACpC,gBAAgB,8CAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,gBAAgB,6CAAM;AACtB;AACA,qBAAqB,6DAAO;AAC5B,EAAE,8CAAO;AACT,IAAI,0DAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,EAAE,8CAAO;AACT;AACA,GAAG;AACH;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iDAAU;AAC5B,sBAAsB,6DAAO;AAC7B;AACA,EAAE,qEAAe;AACjB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM,0DAAI;AACV;AACA;AACA,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,EAAE,6DAAO;AACT,IAAI,0DAAI;AACR,GAAG;AACH,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,eAAe,wDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+CAAQ;AACnC;AACA;AACA;AACA;AACA,kBAAkB,wDAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;AAChB;AACA,EAAE,qEAAe;AACjB,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,IAAI,0DAAI;AACR,oBAAoB,wDAAM;AAC1B;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,SAAS;AACT,QAAQ;AACR,2CAA2C;AAC3C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA,kBAAkB,wDAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,cAAc,8CAAO;AACrB,gBAAgB,6DAAO;AACvB;AACA,0BAA0B,6CAAM;AAChC;AACA,EAAE,qEAAe;AACjB;AACA,GAAG;AACH,EAAE,6DAAO;AACT,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,qEAAe,OAAO,0DAAI;AAC5B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,uBAAuB,0DAAI;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH,EAAE,0DAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI,0DAAI;AACR;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM,wDAAM;AACZ;AACA;AACA;AACA;AACA,sBAAsB,oEAAc;AACpC;AACA;AACA,6BAA6B,6CAAM;AACnC,sBAAsB,6CAAM;AAC5B,EAAE,0DAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS,wDAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0CAA0C,wDAAM;AAChD;AACA;AACA,mBAAmB,wDAAM;AACzB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,kBAAkB,iDAAU;AAC5B,sBAAsB,6DAAO;AAC7B;AACA,EAAE,qEAAe;AACjB;AACA,MAAM,0DAAI;AACV;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH,EAAE,0DAAI;AACN;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,qEAAe;AACjB,IAAI,0DAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,sCAAsC,gDAAmB,CAAC,2CAAc;AACxE;AACA;AACA,MAAM;AACN,mCAAmC;AACnC,+BAA+B,gDAAmB,uBAAuB;AACzE,WAAW,wDAAM,WAAW,wDAAM;AAClC;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,SAAS,wDAAM,iBAAiB,wDAAM,2BAA2B,6DAAO;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAM;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAkB;AAClC;AACA;AACA;AACA,qBAAqB,uEAAe;AACpC,IAAI,mEAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6DAAO;AAChB,MAAM,mEAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAM,gCAAgC,+DAAa,IAAI,6DAAO,CAAC,mEAAa;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAI,CAAC,kEAAU;AACrB;AACA,OAAO;AACP;AACA,UAAU,uEAAqB;AAC/B,QAAQ,oEAAkB;AAC1B;AACA,QAAQ;AACR,QAAQ,iEAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI,CAAC,6DAAO;AAChB,UAAU,mEAAa;AACvB,QAAQ,sEAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI,CAAC,6DAAO;AAChB,UAAU,mEAAa;AACvB,QAAQ,yEAAmB;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ;AACR,0BAA0B,6DAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI,CAAC,kEAAU;AACnB;AACA,KAAK;AACL,IAAI,wEAAkB;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C,0EAAoB;AAC9D;AACA,gEAAc;AACd,0BAA0B;AAC1B;AACA,CAAC;AACD,eAAe,mEAAiB;AAChC;AAC0P;;;;;;;;;;;;;;;;;;;;;AClhF3N;AACiC;AACA;AACN;AAC1D;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2CAAc;AACzC;AACA;AACA,oBAAoB,2CAAc;AAClC;AACA;AACA,SAAS,+CAAkB;AAC3B;AACA;AACA;AACA;AACA,sBAAsB,uCAAU,CAAC,6CAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,iBAAiB,iDAAU;AAC3B,eAAe,gEAAU;AACzB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAU;AACzB;AACA;AACA,KAAK;AACL,GAAG;AACH,gBAAgB,gEAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,EAAE,6DAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,sDAAyB;AAC3B,mBAAmB,6CAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE,6DAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uFAAuF,EAAE,iCAAiC,EAAE;AAC5H,SAAS,gDAAmB,CAAC,oDAAK,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD,iBAAiB,uCAAU,CAAC,6CAAgB;AAC5C,4BAA4B,+CAAQ;AACpC;AACA;AACA;AACA,uBAAuB,0DAAW;AAClC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,uBAAuB,6CAAM;AAC7B,qBAAqB,6CAAM;AAC3B,gBAAgB,gEAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yDAAU;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,gDAAS;AACX;AACA,GAAG;AACH,EAAE,sDAAyB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAW;AACjB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,EAAE,gDAAS;AACX,EAAE,6DAAO;AACT;AACA;AACA;AACA;AACA;AACA,MAAM,6DAAW;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,gDAAmB,CAAC,oDAAK,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,YAAY,gDAAmB,CAAC,2CAAc,QAAQ,gDAAmB,CAAC,oDAAK;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,EAAE,gDAAmB;AACxB;AACA,GAAG,2EAA2E,gDAAmB;AACjG;AACA,GAAG;AACH,CAAC;AACD;AACmC;;;;;;;;;;;;;;;;;ACjUnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNmB;AACA;AACV;AACqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAO;AAC1B;AACA;AACA;AACA,qCAAqC,uDAAO;AAC5C,8BAA8B,kEAAkB;AAChD;AACA,yBAAyB,6DAAa;AACtC;AACA;AACA;AACA;AACA,oCAAoC,oCAAoC;AACxE,cAAc,YAAY;AAC1B,kBAAkB,kBAAkB;AACpC,yBAAyB,uBAAuB;AAChD,uBAAuB,qBAAqB;AAC5C;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,2DAAW;AACjB,MAAM;AACN;AACA,MAAM,uDAAG;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAW;AACjB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uDAAG;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,cAAc,EAAE,cAAc,EAAE;AAC/D,6BAA6B,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE;AAC/E,6BAA6B,EAAE;AAC/B,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,+CAA+C,2DAA2D;AAC1G;AACA,gDAAgD,6DAA6D;AAC7G;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kCAAkC,EAAE,EAAE,IAAI,YAAY,EAAE,+BAA+B,IAAI;AAC3F,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe,IAAI,eAAe,IAAI,eAAe,IAAI,GAAG;AAC7G;AACA;AACA,oEAAoE,gCAAgC;AACpG;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iFAAiF;AACjF;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mDAAmD,0BAA0B,EAAE,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,sIAAsI;AACtI;AACA;AACA,0BAA0B,gDAAS;AACnC;AACA;AACA;AACA,iBAAiB,+CAAQ;AACzB,kBAAkB,+CAAQ;AAC1B;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+CAAQ;AAC5B;AACA;AACA,GAAG;AACH,oBAAoB,6CAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE,gDAAS;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAAM;AACxB,EAAE,gDAAS;AACX;AACA,GAAG;AACH;AACA;AACA;AACA,4GAA4G,kDAAqB,GAAG,4CAAe;AACnJ;AACqgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AG1wBxd;AACV;AACiB;AACsJ;AACtI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAM;AACvC;AACA,uCAAuC,wDAAM,qDAAqD,wDAAM;AACxG;AACA,4BAA4B,kEAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC;AACtF;AACA;AACA,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA,YAAY,wDAAM;AAClB;AACA,oBAAoB,6DAAO;AAC3B,8EAA8E,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,mBAAmB,4CAA4C,IAAI,GAAG,2CAA2C;AAC9M;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAI;AACR,mBAAmB,mEAAa;AAChC,yCAAyC,wDAAM,0BAA0B,+DAAa;AACtF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,0DAAI,uBAAuB,0DAAI,iBAAiB,mEAAa,WAAW,sEAAgB;AAC5G;AACA;AACA;AACA,oBAA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","sources":["webpack://cara/./node_modules/@react-spring/animated/dist/react-spring-animated.esm.js","webpack://cara/./node_modules/@react-spring/core/dist/react-spring-core.esm.js","webpack://cara/./node_modules/@react-spring/parallax/dist/react-spring-parallax.esm.js","webpack://cara/./node_modules/@react-spring/rafz/dist/react-spring-rafz.esm.js","webpack://cara/./node_modules/@react-spring/shared/dist/react-spring-shared.esm.js","webpack://cara/./node_modules/@react-spring/types/animated.js","webpack://cara/./node_modules/@react-spring/types/interpolation.js","webpack://cara/./node_modules/@react-spring/web/dist/react-spring-web.esm.js","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/about.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/contact.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/intro.mdx","webpack://cara/./src/@lekoarts/gatsby-theme-cara/sections/projects.mdx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/about.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/contact.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/footer.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/hero.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/layout.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/projects.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/seo.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/svg.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/content.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/divider.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/inner.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/hooks/use-site-metadata.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/styles/animations.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/styles/utils.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/templates/cara.tsx"],"sourcesContent":["import { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\r\nimport * as React from 'react';\r\nimport { forwardRef, useRef, useCallback, useEffect } from 'react';\r\n\r\nconst $node = Symbol.for('Animated:node');\r\nconst isAnimated = value => !!value && value[$node] === value;\r\nconst getAnimated = owner => owner && owner[$node];\r\nconst setAnimated = (owner, node) => defineHidden(owner, $node, node);\r\nconst getPayload = owner => owner && owner[$node] && owner[$node].getPayload();\r\nclass Animated {\r\n  constructor() {\r\n    this.payload = void 0;\r\n    setAnimated(this, this);\r\n  }\r\n\r\n  getPayload() {\r\n    return this.payload || [];\r\n  }\r\n\r\n}\r\n\r\nclass AnimatedValue extends Animated {\r\n  constructor(_value) {\r\n    super();\r\n    this.done = true;\r\n    this.elapsedTime = void 0;\r\n    this.lastPosition = void 0;\r\n    this.lastVelocity = void 0;\r\n    this.v0 = void 0;\r\n    this.durationProgress = 0;\r\n    this._value = _value;\r\n\r\n    if (is.num(this._value)) {\r\n      this.lastPosition = this._value;\r\n    }\r\n  }\r\n\r\n  static create(value) {\r\n    return new AnimatedValue(value);\r\n  }\r\n\r\n  getPayload() {\r\n    return [this];\r\n  }\r\n\r\n  getValue() {\r\n    return this._value;\r\n  }\r\n\r\n  setValue(value, step) {\r\n    if (is.num(value)) {\r\n      this.lastPosition = value;\r\n\r\n      if (step) {\r\n        value = Math.round(value / step) * step;\r\n\r\n        if (this.done) {\r\n          this.lastPosition = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this._value === value) {\r\n      return false;\r\n    }\r\n\r\n    this._value = value;\r\n    return true;\r\n  }\r\n\r\n  reset() {\r\n    const {\r\n      done\r\n    } = this;\r\n    this.done = false;\r\n\r\n    if (is.num(this._value)) {\r\n      this.elapsedTime = 0;\r\n      this.durationProgress = 0;\r\n      this.lastPosition = this._value;\r\n      if (done) this.lastVelocity = null;\r\n      this.v0 = null;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass AnimatedString extends AnimatedValue {\r\n  constructor(value) {\r\n    super(0);\r\n    this._string = null;\r\n    this._toString = void 0;\r\n    this._toString = createInterpolator({\r\n      output: [value, value]\r\n    });\r\n  }\r\n\r\n  static create(value) {\r\n    return new AnimatedString(value);\r\n  }\r\n\r\n  getValue() {\r\n    let value = this._string;\r\n    return value == null ? this._string = this._toString(this._value) : value;\r\n  }\r\n\r\n  setValue(value) {\r\n    if (is.str(value)) {\r\n      if (value == this._string) {\r\n        return false;\r\n      }\r\n\r\n      this._string = value;\r\n      this._value = 1;\r\n    } else if (super.setValue(value)) {\r\n      this._string = null;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  reset(goal) {\r\n    if (goal) {\r\n      this._toString = createInterpolator({\r\n        output: [this.getValue(), goal]\r\n      });\r\n    }\r\n\r\n    this._value = 0;\r\n    super.reset();\r\n  }\r\n\r\n}\r\n\r\nconst TreeContext = {\r\n  dependencies: null\r\n};\r\n\r\nclass AnimatedObject extends Animated {\r\n  constructor(source) {\r\n    super();\r\n    this.source = source;\r\n    this.setValue(source);\r\n  }\r\n\r\n  getValue(animated) {\r\n    const values = {};\r\n    eachProp(this.source, (source, key) => {\r\n      if (isAnimated(source)) {\r\n        values[key] = source.getValue(animated);\r\n      } else if (hasFluidValue(source)) {\r\n        values[key] = getFluidValue(source);\r\n      } else if (!animated) {\r\n        values[key] = source;\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n\r\n  setValue(source) {\r\n    this.source = source;\r\n    this.payload = this._makePayload(source);\r\n  }\r\n\r\n  reset() {\r\n    if (this.payload) {\r\n      each(this.payload, node => node.reset());\r\n    }\r\n  }\r\n\r\n  _makePayload(source) {\r\n    if (source) {\r\n      const payload = new Set();\r\n      eachProp(source, this._addToPayload, payload);\r\n      return Array.from(payload);\r\n    }\r\n  }\r\n\r\n  _addToPayload(source) {\r\n    if (TreeContext.dependencies && hasFluidValue(source)) {\r\n      TreeContext.dependencies.add(source);\r\n    }\r\n\r\n    const payload = getPayload(source);\r\n\r\n    if (payload) {\r\n      each(payload, node => this.add(node));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass AnimatedArray extends AnimatedObject {\r\n  constructor(source) {\r\n    super(source);\r\n  }\r\n\r\n  static create(source) {\r\n    return new AnimatedArray(source);\r\n  }\r\n\r\n  getValue() {\r\n    return this.source.map(node => node.getValue());\r\n  }\r\n\r\n  setValue(source) {\r\n    const payload = this.getPayload();\r\n\r\n    if (source.length == payload.length) {\r\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean);\r\n    }\r\n\r\n    super.setValue(source.map(makeAnimated));\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nfunction makeAnimated(value) {\r\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\r\n  return nodeType.create(value);\r\n}\r\n\r\nfunction getAnimatedType(value) {\r\n  const parentNode = getAnimated(value);\r\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nconst withAnimated = (Component, host) => {\r\n  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\r\n  return forwardRef((givenProps, givenRef) => {\r\n    const instanceRef = useRef(null);\r\n    const ref = hasInstance && useCallback(value => {\r\n      instanceRef.current = updateRef(givenRef, value);\r\n    }, [givenRef]);\r\n    const [props, deps] = getAnimatedState(givenProps, host);\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    const callback = () => {\r\n      const instance = instanceRef.current;\r\n\r\n      if (hasInstance && !instance) {\r\n        return;\r\n      }\r\n\r\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\r\n\r\n      if (didUpdate === false) {\r\n        forceUpdate();\r\n      }\r\n    };\r\n\r\n    const observer = new PropsObserver(callback, deps);\r\n    const observerRef = useRef();\r\n    useLayoutEffect(() => {\r\n      const lastObserver = observerRef.current;\r\n      observerRef.current = observer;\r\n      each(deps, dep => addFluidObserver(dep, observer));\r\n\r\n      if (lastObserver) {\r\n        each(lastObserver.deps, dep => removeFluidObserver(dep, lastObserver));\r\n        raf.cancel(lastObserver.update);\r\n      }\r\n    });\r\n    useEffect(callback, []);\r\n    useOnce(() => () => {\r\n      const observer = observerRef.current;\r\n      each(observer.deps, dep => removeFluidObserver(dep, observer));\r\n    });\r\n    const usedProps = host.getComponentProps(props.getValue());\r\n    return React.createElement(Component, _extends({}, usedProps, {\r\n      ref: ref\r\n    }));\r\n  });\r\n};\r\n\r\nclass PropsObserver {\r\n  constructor(update, deps) {\r\n    this.update = update;\r\n    this.deps = deps;\r\n  }\r\n\r\n  eventObserved(event) {\r\n    if (event.type == 'change') {\r\n      raf.write(this.update);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction getAnimatedState(props, host) {\r\n  const dependencies = new Set();\r\n  TreeContext.dependencies = dependencies;\r\n  if (props.style) props = _extends({}, props, {\r\n    style: host.createAnimatedStyle(props.style)\r\n  });\r\n  props = new AnimatedObject(props);\r\n  TreeContext.dependencies = null;\r\n  return [props, dependencies];\r\n}\r\n\r\nfunction updateRef(ref, value) {\r\n  if (ref) {\r\n    if (is.fun(ref)) ref(value);else ref.current = value;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nconst cacheKey = Symbol.for('AnimatedComponent');\r\nconst createHost = (components, {\r\n  applyAnimatedValues: _applyAnimatedValues = () => false,\r\n  createAnimatedStyle: _createAnimatedStyle = style => new AnimatedObject(style),\r\n  getComponentProps: _getComponentProps = props => props\r\n} = {}) => {\r\n  const hostConfig = {\r\n    applyAnimatedValues: _applyAnimatedValues,\r\n    createAnimatedStyle: _createAnimatedStyle,\r\n    getComponentProps: _getComponentProps\r\n  };\r\n\r\n  const animated = Component => {\r\n    const displayName = getDisplayName(Component) || 'Anonymous';\r\n\r\n    if (is.str(Component)) {\r\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\r\n    } else {\r\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\r\n    }\r\n\r\n    Component.displayName = `Animated(${displayName})`;\r\n    return Component;\r\n  };\r\n\r\n  eachProp(components, (Component, key) => {\r\n    if (is.arr(components)) {\r\n      key = getDisplayName(Component);\r\n    }\r\n\r\n    animated[key] = animated(Component);\r\n  });\r\n  return {\r\n    animated\r\n  };\r\n};\r\n\r\nconst getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\r\n\r\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };\r\n","import { eachProp, is, toArray, isAnimatedString, Globals, getFluidValue, useLayoutEffect, each, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, createInterpolator, createStringInterpolator } from '@react-spring/shared';\r\nexport { Globals, createInterpolator } from '@react-spring/shared';\r\nimport * as React from 'react';\r\nimport { useContext, useMemo, useRef, useState } from 'react';\r\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\r\nexport * from '@react-spring/types/animated';\r\nexport * from '@react-spring/types/interpolation';\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction callProp(value, ...args) {\r\n  return is.fun(value) ? value(...args) : value;\r\n}\r\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\r\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\r\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\r\n\r\nconst noopTransform = value => value;\r\n\r\nconst getDefaultProps = (props, transform = noopTransform) => {\r\n  let keys = DEFAULT_PROPS;\r\n\r\n  if (props.default && props.default !== true) {\r\n    props = props.default;\r\n    keys = Object.keys(props);\r\n  }\r\n\r\n  const defaults = {};\r\n\r\n  for (const key of keys) {\r\n    const value = transform(props[key], key);\r\n\r\n    if (!is.und(value)) {\r\n      defaults[key] = value;\r\n    }\r\n  }\r\n\r\n  return defaults;\r\n};\r\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\r\nconst RESERVED_PROPS = {\r\n  config: 1,\r\n  from: 1,\r\n  to: 1,\r\n  ref: 1,\r\n  loop: 1,\r\n  reset: 1,\r\n  pause: 1,\r\n  cancel: 1,\r\n  reverse: 1,\r\n  immediate: 1,\r\n  default: 1,\r\n  delay: 1,\r\n  onProps: 1,\r\n  onStart: 1,\r\n  onChange: 1,\r\n  onPause: 1,\r\n  onResume: 1,\r\n  onRest: 1,\r\n  onResolve: 1,\r\n  items: 1,\r\n  trail: 1,\r\n  sort: 1,\r\n  expires: 1,\r\n  initial: 1,\r\n  enter: 1,\r\n  update: 1,\r\n  leave: 1,\r\n  children: 1,\r\n  onDestroyed: 1,\r\n  keys: 1,\r\n  callId: 1,\r\n  parentId: 1\r\n};\r\n\r\nfunction getForwardProps(props) {\r\n  const forward = {};\r\n  let count = 0;\r\n  eachProp(props, (value, prop) => {\r\n    if (!RESERVED_PROPS[prop]) {\r\n      forward[prop] = value;\r\n      count++;\r\n    }\r\n  });\r\n\r\n  if (count) {\r\n    return forward;\r\n  }\r\n}\r\n\r\nfunction inferTo(props) {\r\n  const to = getForwardProps(props);\r\n\r\n  if (to) {\r\n    const out = {\r\n      to\r\n    };\r\n    eachProp(props, (val, key) => key in to || (out[key] = val));\r\n    return out;\r\n  }\r\n\r\n  return _extends({}, props);\r\n}\r\nfunction computeGoal(value) {\r\n  value = getFluidValue(value);\r\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\r\n    range: [0, 1],\r\n    output: [value, value]\r\n  })(1) : value;\r\n}\r\nfunction hasProps(props) {\r\n  for (const _ in props) return true;\r\n\r\n  return false;\r\n}\r\nfunction isAsyncTo(to) {\r\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\r\n}\r\nfunction detachRefs(ctrl, ref) {\r\n  var _ctrl$ref;\r\n\r\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\r\n  ref == null ? void 0 : ref.delete(ctrl);\r\n}\r\nfunction replaceRef(ctrl, ref) {\r\n  if (ref && ctrl.ref !== ref) {\r\n    var _ctrl$ref2;\r\n\r\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\r\n    ref.add(ctrl);\r\n    ctrl.ref = ref;\r\n  }\r\n}\r\n\r\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\r\n  useLayoutEffect(() => {\r\n    if (timeSteps) {\r\n      let prevDelay = 0;\r\n      each(refs, (ref, i) => {\r\n        const controllers = ref.current;\r\n\r\n        if (controllers.length) {\r\n          let delay = timeFrame * timeSteps[i];\r\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\r\n          each(controllers, ctrl => {\r\n            each(ctrl.queue, props => {\r\n              const memoizedDelayProp = props.delay;\r\n\r\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\r\n            });\r\n          });\r\n          ref.start();\r\n        }\r\n      });\r\n    } else {\r\n      let p = Promise.resolve();\r\n      each(refs, ref => {\r\n        const controllers = ref.current;\r\n\r\n        if (controllers.length) {\r\n          const queues = controllers.map(ctrl => {\r\n            const q = ctrl.queue;\r\n            ctrl.queue = [];\r\n            return q;\r\n          });\r\n          p = p.then(() => {\r\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\r\n            return Promise.all(ref.start());\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nconst config = {\r\n  default: {\r\n    tension: 170,\r\n    friction: 26\r\n  },\r\n  gentle: {\r\n    tension: 120,\r\n    friction: 14\r\n  },\r\n  wobbly: {\r\n    tension: 180,\r\n    friction: 12\r\n  },\r\n  stiff: {\r\n    tension: 210,\r\n    friction: 20\r\n  },\r\n  slow: {\r\n    tension: 280,\r\n    friction: 60\r\n  },\r\n  molasses: {\r\n    tension: 280,\r\n    friction: 120\r\n  }\r\n};\r\nconst c1 = 1.70158;\r\nconst c2 = c1 * 1.525;\r\nconst c3 = c1 + 1;\r\nconst c4 = 2 * Math.PI / 3;\r\nconst c5 = 2 * Math.PI / 4.5;\r\n\r\nconst bounceOut = x => {\r\n  const n1 = 7.5625;\r\n  const d1 = 2.75;\r\n\r\n  if (x < 1 / d1) {\r\n    return n1 * x * x;\r\n  } else if (x < 2 / d1) {\r\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\r\n  } else if (x < 2.5 / d1) {\r\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\r\n  } else {\r\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\r\n  }\r\n};\r\n\r\nconst easings = {\r\n  linear: x => x,\r\n  easeInQuad: x => x * x,\r\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\r\n  easeInOutQuad: x => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\r\n  easeInCubic: x => x * x * x,\r\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\r\n  easeInOutCubic: x => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\r\n  easeInQuart: x => x * x * x * x,\r\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\r\n  easeInOutQuart: x => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\r\n  easeInQuint: x => x * x * x * x * x,\r\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\r\n  easeInOutQuint: x => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\r\n  easeInSine: x => 1 - Math.cos(x * Math.PI / 2),\r\n  easeOutSine: x => Math.sin(x * Math.PI / 2),\r\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\r\n  easeInExpo: x => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\r\n  easeOutExpo: x => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\r\n  easeInOutExpo: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2,\r\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\r\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\r\n  easeInOutCirc: x => x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\r\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\r\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\r\n  easeInOutBack: x => x < 0.5 ? Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2) / 2 : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\r\n  easeInElastic: x => x === 0 ? 0 : x === 1 ? 1 : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\r\n  easeOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\r\n  easeInOutElastic: x => x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2 : Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5) / 2 + 1,\r\n  easeInBounce: x => 1 - bounceOut(1 - x),\r\n  easeOutBounce: bounceOut,\r\n  easeInOutBounce: x => x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2\r\n};\r\n\r\nconst defaults = _extends({}, config.default, {\r\n  mass: 1,\r\n  damping: 1,\r\n  easing: easings.linear,\r\n  clamp: false\r\n});\r\n\r\nclass AnimationConfig {\r\n  constructor() {\r\n    this.tension = void 0;\r\n    this.friction = void 0;\r\n    this.frequency = void 0;\r\n    this.damping = void 0;\r\n    this.mass = void 0;\r\n    this.velocity = 0;\r\n    this.restVelocity = void 0;\r\n    this.precision = void 0;\r\n    this.progress = void 0;\r\n    this.duration = void 0;\r\n    this.easing = void 0;\r\n    this.clamp = void 0;\r\n    this.bounce = void 0;\r\n    this.decay = void 0;\r\n    this.round = void 0;\r\n    Object.assign(this, defaults);\r\n  }\r\n\r\n}\r\nfunction mergeConfig(config, newConfig, defaultConfig) {\r\n  if (defaultConfig) {\r\n    defaultConfig = _extends({}, defaultConfig);\r\n    sanitizeConfig(defaultConfig, newConfig);\r\n    newConfig = _extends({}, defaultConfig, newConfig);\r\n  }\r\n\r\n  sanitizeConfig(config, newConfig);\r\n  Object.assign(config, newConfig);\r\n\r\n  for (const key in defaults) {\r\n    if (config[key] == null) {\r\n      config[key] = defaults[key];\r\n    }\r\n  }\r\n\r\n  let {\r\n    mass,\r\n    frequency,\r\n    damping\r\n  } = config;\r\n\r\n  if (!is.und(frequency)) {\r\n    if (frequency < 0.01) frequency = 0.01;\r\n    if (damping < 0) damping = 0;\r\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\r\n    config.friction = 4 * Math.PI * damping * mass / frequency;\r\n  }\r\n\r\n  return config;\r\n}\r\n\r\nfunction sanitizeConfig(config, props) {\r\n  if (!is.und(props.decay)) {\r\n    config.duration = undefined;\r\n  } else {\r\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\r\n\r\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\r\n      config.duration = undefined;\r\n      config.decay = undefined;\r\n    }\r\n\r\n    if (isTensionConfig) {\r\n      config.frequency = undefined;\r\n    }\r\n  }\r\n}\r\n\r\nconst emptyArray = [];\r\nclass Animation {\r\n  constructor() {\r\n    this.changed = false;\r\n    this.values = emptyArray;\r\n    this.toValues = null;\r\n    this.fromValues = emptyArray;\r\n    this.to = void 0;\r\n    this.from = void 0;\r\n    this.config = new AnimationConfig();\r\n    this.immediate = false;\r\n  }\r\n\r\n}\r\n\r\nfunction scheduleProps(callId, {\r\n  key,\r\n  props,\r\n  defaultProps,\r\n  state,\r\n  actions\r\n}) {\r\n  return new Promise((resolve, reject) => {\r\n    var _props$cancel;\r\n\r\n    let delay;\r\n    let timeout;\r\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\r\n\r\n    if (cancel) {\r\n      onStart();\r\n    } else {\r\n      if (!is.und(props.pause)) {\r\n        state.paused = matchProp(props.pause, key);\r\n      }\r\n\r\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\r\n\r\n      if (pause !== true) {\r\n        pause = state.paused || matchProp(pause, key);\r\n      }\r\n\r\n      delay = callProp(props.delay || 0, key);\r\n\r\n      if (pause) {\r\n        state.resumeQueue.add(onResume);\r\n        actions.pause();\r\n      } else {\r\n        actions.resume();\r\n        onResume();\r\n      }\r\n    }\r\n\r\n    function onPause() {\r\n      state.resumeQueue.add(onResume);\r\n      state.timeouts.delete(timeout);\r\n      timeout.cancel();\r\n      delay = timeout.time - raf.now();\r\n    }\r\n\r\n    function onResume() {\r\n      if (delay > 0 && !Globals.skipAnimation) {\r\n        state.delayed = true;\r\n        timeout = raf.setTimeout(onStart, delay);\r\n        state.pauseQueue.add(onPause);\r\n        state.timeouts.add(timeout);\r\n      } else {\r\n        onStart();\r\n      }\r\n    }\r\n\r\n    function onStart() {\r\n      if (state.delayed) {\r\n        state.delayed = false;\r\n      }\r\n\r\n      state.pauseQueue.delete(onPause);\r\n      state.timeouts.delete(timeout);\r\n\r\n      if (callId <= (state.cancelId || 0)) {\r\n        cancel = true;\r\n      }\r\n\r\n      try {\r\n        actions.start(_extends({}, props, {\r\n          callId,\r\n          cancel\r\n        }), resolve);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\r\nconst getNoopResult = value => ({\r\n  value,\r\n  noop: true,\r\n  finished: true,\r\n  cancelled: false\r\n});\r\nconst getFinishedResult = (value, finished, cancelled = false) => ({\r\n  value,\r\n  finished,\r\n  cancelled\r\n});\r\nconst getCancelledResult = value => ({\r\n  value,\r\n  cancelled: true,\r\n  finished: false\r\n});\r\n\r\nfunction runAsync(to, props, state, target) {\r\n  const {\r\n    callId,\r\n    parentId,\r\n    onRest\r\n  } = props;\r\n  const {\r\n    asyncTo: prevTo,\r\n    promise: prevPromise\r\n  } = state;\r\n\r\n  if (!parentId && to === prevTo && !props.reset) {\r\n    return prevPromise;\r\n  }\r\n\r\n  return state.promise = (async () => {\r\n    state.asyncId = callId;\r\n    state.asyncTo = to;\r\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\r\n    let preventBail;\r\n    let bail;\r\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\r\n\r\n    const bailIfEnded = bailSignal => {\r\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\r\n\r\n      if (bailResult) {\r\n        bailSignal.result = bailResult;\r\n        bail(bailSignal);\r\n        throw bailSignal;\r\n      }\r\n    };\r\n\r\n    const animate = (arg1, arg2) => {\r\n      const bailSignal = new BailSignal();\r\n      const skipAnimationSignal = new SkipAniamtionSignal();\r\n      return (async () => {\r\n        if (Globals.skipAnimation) {\r\n          stopAsync(state);\r\n          skipAnimationSignal.result = getFinishedResult(target, false);\r\n          bail(skipAnimationSignal);\r\n          throw skipAnimationSignal;\r\n        }\r\n\r\n        bailIfEnded(bailSignal);\r\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\r\n          to: arg1\r\n        });\r\n        props.parentId = callId;\r\n        eachProp(defaultProps, (value, key) => {\r\n          if (is.und(props[key])) {\r\n            props[key] = value;\r\n          }\r\n        });\r\n        const result = await target.start(props);\r\n        bailIfEnded(bailSignal);\r\n\r\n        if (state.paused) {\r\n          await new Promise(resume => {\r\n            state.resumeQueue.add(resume);\r\n          });\r\n        }\r\n\r\n        return result;\r\n      })();\r\n    };\r\n\r\n    let result;\r\n\r\n    if (Globals.skipAnimation) {\r\n      stopAsync(state);\r\n      return getFinishedResult(target, false);\r\n    }\r\n\r\n    try {\r\n      let animating;\r\n\r\n      if (is.arr(to)) {\r\n        animating = (async queue => {\r\n          for (const props of queue) {\r\n            await animate(props);\r\n          }\r\n        })(to);\r\n      } else {\r\n          animating = Promise.resolve(to(animate, target.stop.bind(target)));\r\n        }\r\n\r\n      await Promise.all([animating.then(preventBail), bailPromise]);\r\n      result = getFinishedResult(target.get(), true, false);\r\n    } catch (err) {\r\n      if (err instanceof BailSignal) {\r\n        result = err.result;\r\n      } else if (err instanceof SkipAniamtionSignal) {\r\n        result = err.result;\r\n      } else {\r\n        throw err;\r\n      }\r\n    } finally {\r\n      if (callId == state.asyncId) {\r\n        state.asyncId = parentId;\r\n        state.asyncTo = parentId ? prevTo : undefined;\r\n        state.promise = parentId ? prevPromise : undefined;\r\n      }\r\n    }\r\n\r\n    if (is.fun(onRest)) {\r\n      raf.batchedUpdates(() => {\r\n        onRest(result, target, target.item);\r\n      });\r\n    }\r\n\r\n    return result;\r\n  })();\r\n}\r\nfunction stopAsync(state, cancelId) {\r\n  flush(state.timeouts, t => t.cancel());\r\n  state.pauseQueue.clear();\r\n  state.resumeQueue.clear();\r\n  state.asyncId = state.asyncTo = state.promise = undefined;\r\n  if (cancelId) state.cancelId = cancelId;\r\n}\r\nclass BailSignal extends Error {\r\n  constructor() {\r\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\r\n    this.result = void 0;\r\n  }\r\n\r\n}\r\nclass SkipAniamtionSignal extends Error {\r\n  constructor() {\r\n    super('SkipAnimationSignal');\r\n    this.result = void 0;\r\n  }\r\n\r\n}\r\n\r\nconst isFrameValue = value => value instanceof FrameValue;\r\nlet nextId$1 = 1;\r\nclass FrameValue extends FluidValue {\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.id = nextId$1++;\r\n    this.key = void 0;\r\n    this._priority = 0;\r\n  }\r\n\r\n  get priority() {\r\n    return this._priority;\r\n  }\r\n\r\n  set priority(priority) {\r\n    if (this._priority != priority) {\r\n      this._priority = priority;\r\n\r\n      this._onPriorityChange(priority);\r\n    }\r\n  }\r\n\r\n  get() {\r\n    const node = getAnimated(this);\r\n    return node && node.getValue();\r\n  }\r\n\r\n  to(...args) {\r\n    return Globals.to(this, args);\r\n  }\r\n\r\n  interpolate(...args) {\r\n    deprecateInterpolate();\r\n    return Globals.to(this, args);\r\n  }\r\n\r\n  toJSON() {\r\n    return this.get();\r\n  }\r\n\r\n  observerAdded(count) {\r\n    if (count == 1) this._attach();\r\n  }\r\n\r\n  observerRemoved(count) {\r\n    if (count == 0) this._detach();\r\n  }\r\n\r\n  _attach() {}\r\n\r\n  _detach() {}\r\n\r\n  _onChange(value, idle = false) {\r\n    callFluidObservers(this, {\r\n      type: 'change',\r\n      parent: this,\r\n      value,\r\n      idle\r\n    });\r\n  }\r\n\r\n  _onPriorityChange(priority) {\r\n    if (!this.idle) {\r\n      frameLoop.sort(this);\r\n    }\r\n\r\n    callFluidObservers(this, {\r\n      type: 'priority',\r\n      parent: this,\r\n      priority\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst $P = Symbol.for('SpringPhase');\r\nconst HAS_ANIMATED = 1;\r\nconst IS_ANIMATING = 2;\r\nconst IS_PAUSED = 4;\r\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\r\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\r\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\r\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\r\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\r\n\r\nclass SpringValue extends FrameValue {\r\n  constructor(arg1, arg2) {\r\n    super();\r\n    this.key = void 0;\r\n    this.animation = new Animation();\r\n    this.queue = void 0;\r\n    this.defaultProps = {};\r\n    this._state = {\r\n      paused: false,\r\n      delayed: false,\r\n      pauseQueue: new Set(),\r\n      resumeQueue: new Set(),\r\n      timeouts: new Set()\r\n    };\r\n    this._pendingCalls = new Set();\r\n    this._lastCallId = 0;\r\n    this._lastToId = 0;\r\n    this._memoizedDuration = 0;\r\n\r\n    if (!is.und(arg1) || !is.und(arg2)) {\r\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\r\n        from: arg1\r\n      });\r\n\r\n      if (is.und(props.default)) {\r\n        props.default = true;\r\n      }\r\n\r\n      this.start(props);\r\n    }\r\n  }\r\n\r\n  get idle() {\r\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\r\n  }\r\n\r\n  get goal() {\r\n    return getFluidValue(this.animation.to);\r\n  }\r\n\r\n  get velocity() {\r\n    const node = getAnimated(this);\r\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\r\n  }\r\n\r\n  get hasAnimated() {\r\n    return hasAnimated(this);\r\n  }\r\n\r\n  get isAnimating() {\r\n    return isAnimating(this);\r\n  }\r\n\r\n  get isPaused() {\r\n    return isPaused(this);\r\n  }\r\n\r\n  get isDelayed() {\r\n    return this._state.delayed;\r\n  }\r\n\r\n  advance(dt) {\r\n    let idle = true;\r\n    let changed = false;\r\n    const anim = this.animation;\r\n    let {\r\n      config,\r\n      toValues\r\n    } = anim;\r\n    const payload = getPayload(anim.to);\r\n\r\n    if (!payload && hasFluidValue(anim.to)) {\r\n      toValues = toArray(getFluidValue(anim.to));\r\n    }\r\n\r\n    anim.values.forEach((node, i) => {\r\n      if (node.done) return;\r\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\r\n      let finished = anim.immediate;\r\n      let position = to;\r\n\r\n      if (!finished) {\r\n        position = node.lastPosition;\r\n\r\n        if (config.tension <= 0) {\r\n          node.done = true;\r\n          return;\r\n        }\r\n\r\n        let elapsed = node.elapsedTime += dt;\r\n        const from = anim.fromValues[i];\r\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\r\n        let velocity;\r\n\r\n        if (!is.und(config.duration)) {\r\n          let p = 1;\r\n\r\n          if (config.duration > 0) {\r\n            if (this._memoizedDuration !== config.duration) {\r\n              this._memoizedDuration = config.duration;\r\n\r\n              if (node.durationProgress > 0) {\r\n                node.elapsedTime = config.duration * node.durationProgress;\r\n                elapsed = node.elapsedTime += dt;\r\n              }\r\n            }\r\n\r\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\r\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\r\n            node.durationProgress = p;\r\n          }\r\n\r\n          position = from + config.easing(p) * (to - from);\r\n          velocity = (position - node.lastPosition) / dt;\r\n          finished = p == 1;\r\n        } else if (config.decay) {\r\n            const decay = config.decay === true ? 0.998 : config.decay;\r\n            const e = Math.exp(-(1 - decay) * elapsed);\r\n            position = from + v0 / (1 - decay) * (1 - e);\r\n            finished = Math.abs(node.lastPosition - position) < 0.1;\r\n            velocity = v0 * e;\r\n          } else {\r\n              velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\r\n              const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\r\n              const restVelocity = config.restVelocity || precision / 10;\r\n              const bounceFactor = config.clamp ? 0 : config.bounce;\r\n              const canBounce = !is.und(bounceFactor);\r\n              const isGrowing = from == to ? node.v0 > 0 : from < to;\r\n              let isMoving;\r\n              let isBouncing = false;\r\n              const step = 1;\r\n              const numSteps = Math.ceil(dt / step);\r\n\r\n              for (let n = 0; n < numSteps; ++n) {\r\n                isMoving = Math.abs(velocity) > restVelocity;\r\n\r\n                if (!isMoving) {\r\n                  finished = Math.abs(to - position) <= precision;\r\n\r\n                  if (finished) {\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                if (canBounce) {\r\n                  isBouncing = position == to || position > to == isGrowing;\r\n\r\n                  if (isBouncing) {\r\n                    velocity = -velocity * bounceFactor;\r\n                    position = to;\r\n                  }\r\n                }\r\n\r\n                const springForce = -config.tension * 0.000001 * (position - to);\r\n                const dampingForce = -config.friction * 0.001 * velocity;\r\n                const acceleration = (springForce + dampingForce) / config.mass;\r\n                velocity = velocity + acceleration * step;\r\n                position = position + velocity * step;\r\n              }\r\n            }\r\n\r\n        node.lastVelocity = velocity;\r\n\r\n        if (Number.isNaN(position)) {\r\n          console.warn(`Got NaN while animating:`, this);\r\n          finished = true;\r\n        }\r\n      }\r\n\r\n      if (payload && !payload[i].done) {\r\n        finished = false;\r\n      }\r\n\r\n      if (finished) {\r\n        node.done = true;\r\n      } else {\r\n        idle = false;\r\n      }\r\n\r\n      if (node.setValue(position, config.round)) {\r\n        changed = true;\r\n      }\r\n    });\r\n    const node = getAnimated(this);\r\n    const currVal = node.getValue();\r\n\r\n    if (idle) {\r\n      const finalVal = getFluidValue(anim.to);\r\n\r\n      if ((currVal !== finalVal || changed) && !config.decay) {\r\n        node.setValue(finalVal);\r\n\r\n        this._onChange(finalVal);\r\n      } else if (changed && config.decay) {\r\n        this._onChange(currVal);\r\n      }\r\n\r\n      this._stop();\r\n    } else if (changed) {\r\n      this._onChange(currVal);\r\n    }\r\n  }\r\n\r\n  set(value) {\r\n    raf.batchedUpdates(() => {\r\n      this._stop();\r\n\r\n      this._focus(value);\r\n\r\n      this._set(value);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  pause() {\r\n    this._update({\r\n      pause: true\r\n    });\r\n  }\r\n\r\n  resume() {\r\n    this._update({\r\n      pause: false\r\n    });\r\n  }\r\n\r\n  finish() {\r\n    if (isAnimating(this)) {\r\n      const {\r\n        to,\r\n        config\r\n      } = this.animation;\r\n      raf.batchedUpdates(() => {\r\n        this._onStart();\r\n\r\n        if (!config.decay) {\r\n          this._set(to, false);\r\n        }\r\n\r\n        this._stop();\r\n      });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  update(props) {\r\n    const queue = this.queue || (this.queue = []);\r\n    queue.push(props);\r\n    return this;\r\n  }\r\n\r\n  start(to, arg2) {\r\n    let queue;\r\n\r\n    if (!is.und(to)) {\r\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\r\n        to\r\n      })];\r\n    } else {\r\n      queue = this.queue || [];\r\n      this.queue = [];\r\n    }\r\n\r\n    return Promise.all(queue.map(props => {\r\n      const up = this._update(props);\r\n\r\n      return up;\r\n    })).then(results => getCombinedResult(this, results));\r\n  }\r\n\r\n  stop(cancel) {\r\n    const {\r\n      to\r\n    } = this.animation;\r\n\r\n    this._focus(this.get());\r\n\r\n    stopAsync(this._state, cancel && this._lastCallId);\r\n    raf.batchedUpdates(() => this._stop(to, cancel));\r\n    return this;\r\n  }\r\n\r\n  reset() {\r\n    this._update({\r\n      reset: true\r\n    });\r\n  }\r\n\r\n  eventObserved(event) {\r\n    if (event.type == 'change') {\r\n      this._start();\r\n    } else if (event.type == 'priority') {\r\n      this.priority = event.priority + 1;\r\n    }\r\n  }\r\n\r\n  _prepareNode(props) {\r\n    const key = this.key || '';\r\n    let {\r\n      to,\r\n      from\r\n    } = props;\r\n    to = is.obj(to) ? to[key] : to;\r\n\r\n    if (to == null || isAsyncTo(to)) {\r\n      to = undefined;\r\n    }\r\n\r\n    from = is.obj(from) ? from[key] : from;\r\n\r\n    if (from == null) {\r\n      from = undefined;\r\n    }\r\n\r\n    const range = {\r\n      to,\r\n      from\r\n    };\r\n\r\n    if (!hasAnimated(this)) {\r\n      if (props.reverse) [to, from] = [from, to];\r\n      from = getFluidValue(from);\r\n\r\n      if (!is.und(from)) {\r\n        this._set(from);\r\n      } else if (!getAnimated(this)) {\r\n          this._set(to);\r\n        }\r\n    }\r\n\r\n    return range;\r\n  }\r\n\r\n  _update(_ref, isLoop) {\r\n    let props = _extends({}, _ref);\r\n\r\n    const {\r\n      key,\r\n      defaultProps\r\n    } = this;\r\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\r\n    mergeActiveFn(this, props, 'onProps');\r\n    sendEvent(this, 'onProps', props, this);\r\n\r\n    const range = this._prepareNode(props);\r\n\r\n    if (Object.isFrozen(this)) {\r\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\r\n    }\r\n\r\n    const state = this._state;\r\n    return scheduleProps(++this._lastCallId, {\r\n      key,\r\n      props,\r\n      defaultProps,\r\n      state,\r\n      actions: {\r\n        pause: () => {\r\n          if (!isPaused(this)) {\r\n            setPausedBit(this, true);\r\n            flushCalls(state.pauseQueue);\r\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\r\n          }\r\n        },\r\n        resume: () => {\r\n          if (isPaused(this)) {\r\n            setPausedBit(this, false);\r\n\r\n            if (isAnimating(this)) {\r\n              this._resume();\r\n            }\r\n\r\n            flushCalls(state.resumeQueue);\r\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\r\n          }\r\n        },\r\n        start: this._merge.bind(this, range)\r\n      }\r\n    }).then(result => {\r\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\r\n        const nextProps = createLoopUpdate(props);\r\n\r\n        if (nextProps) {\r\n          return this._update(nextProps, true);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  _merge(range, props, resolve) {\r\n    if (props.cancel) {\r\n      this.stop(true);\r\n      return resolve(getCancelledResult(this));\r\n    }\r\n\r\n    const hasToProp = !is.und(range.to);\r\n    const hasFromProp = !is.und(range.from);\r\n\r\n    if (hasToProp || hasFromProp) {\r\n      if (props.callId > this._lastToId) {\r\n        this._lastToId = props.callId;\r\n      } else {\r\n        return resolve(getCancelledResult(this));\r\n      }\r\n    }\r\n\r\n    const {\r\n      key,\r\n      defaultProps,\r\n      animation: anim\r\n    } = this;\r\n    const {\r\n      to: prevTo,\r\n      from: prevFrom\r\n    } = anim;\r\n    let {\r\n      to = prevTo,\r\n      from = prevFrom\r\n    } = range;\r\n\r\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\r\n      to = from;\r\n    }\r\n\r\n    if (props.reverse) [to, from] = [from, to];\r\n    const hasFromChanged = !isEqual(from, prevFrom);\r\n\r\n    if (hasFromChanged) {\r\n      anim.from = from;\r\n    }\r\n\r\n    from = getFluidValue(from);\r\n    const hasToChanged = !isEqual(to, prevTo);\r\n\r\n    if (hasToChanged) {\r\n      this._focus(to);\r\n    }\r\n\r\n    const hasAsyncTo = isAsyncTo(props.to);\r\n    const {\r\n      config\r\n    } = anim;\r\n    const {\r\n      decay,\r\n      velocity\r\n    } = config;\r\n\r\n    if (hasToProp || hasFromProp) {\r\n      config.velocity = 0;\r\n    }\r\n\r\n    if (props.config && !hasAsyncTo) {\r\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\r\n    }\r\n\r\n    let node = getAnimated(this);\r\n\r\n    if (!node || is.und(to)) {\r\n      return resolve(getFinishedResult(this, true));\r\n    }\r\n\r\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\r\n    const value = reset ? from : this.get();\r\n    const goal = computeGoal(to);\r\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\r\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\r\n\r\n    if (hasToChanged) {\r\n      const nodeType = getAnimatedType(to);\r\n\r\n      if (nodeType !== node.constructor) {\r\n        if (immediate) {\r\n          node = this._set(goal);\r\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\r\n      }\r\n    }\r\n\r\n    const goalType = node.constructor;\r\n    let started = hasFluidValue(to);\r\n    let finished = false;\r\n\r\n    if (!started) {\r\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\r\n\r\n      if (hasToChanged || hasValueChanged) {\r\n        finished = isEqual(computeGoal(value), goal);\r\n        started = !finished;\r\n      }\r\n\r\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\r\n        started = true;\r\n      }\r\n    }\r\n\r\n    if (finished && isAnimating(this)) {\r\n      if (anim.changed && !reset) {\r\n        started = true;\r\n      } else if (!started) {\r\n          this._stop(prevTo);\r\n        }\r\n    }\r\n\r\n    if (!hasAsyncTo) {\r\n      if (started || hasFluidValue(prevTo)) {\r\n        anim.values = node.getPayload();\r\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\r\n      }\r\n\r\n      if (anim.immediate != immediate) {\r\n        anim.immediate = immediate;\r\n\r\n        if (!immediate && !reset) {\r\n          this._set(prevTo);\r\n        }\r\n      }\r\n\r\n      if (started) {\r\n        const {\r\n          onRest\r\n        } = anim;\r\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\r\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\r\n        flushCalls(this._pendingCalls, result);\r\n\r\n        this._pendingCalls.add(resolve);\r\n\r\n        if (anim.changed) raf.batchedUpdates(() => {\r\n          anim.changed = !reset;\r\n          onRest == null ? void 0 : onRest(result, this);\r\n\r\n          if (reset) {\r\n            callProp(defaultProps.onRest, result);\r\n          } else {\r\n              anim.onStart == null ? void 0 : anim.onStart(result, this);\r\n            }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (reset) {\r\n      this._set(value);\r\n    }\r\n\r\n    if (hasAsyncTo) {\r\n      resolve(runAsync(props.to, props, this._state, this));\r\n    } else if (started) {\r\n        this._start();\r\n      } else if (isAnimating(this) && !hasToChanged) {\r\n          this._pendingCalls.add(resolve);\r\n        } else {\r\n            resolve(getNoopResult(value));\r\n          }\r\n  }\r\n\r\n  _focus(value) {\r\n    const anim = this.animation;\r\n\r\n    if (value !== anim.to) {\r\n      if (getFluidObservers(this)) {\r\n        this._detach();\r\n      }\r\n\r\n      anim.to = value;\r\n\r\n      if (getFluidObservers(this)) {\r\n        this._attach();\r\n      }\r\n    }\r\n  }\r\n\r\n  _attach() {\r\n    let priority = 0;\r\n    const {\r\n      to\r\n    } = this.animation;\r\n\r\n    if (hasFluidValue(to)) {\r\n      addFluidObserver(to, this);\r\n\r\n      if (isFrameValue(to)) {\r\n        priority = to.priority + 1;\r\n      }\r\n    }\r\n\r\n    this.priority = priority;\r\n  }\r\n\r\n  _detach() {\r\n    const {\r\n      to\r\n    } = this.animation;\r\n\r\n    if (hasFluidValue(to)) {\r\n      removeFluidObserver(to, this);\r\n    }\r\n  }\r\n\r\n  _set(arg, idle = true) {\r\n    const value = getFluidValue(arg);\r\n\r\n    if (!is.und(value)) {\r\n      const oldNode = getAnimated(this);\r\n\r\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\r\n        const nodeType = getAnimatedType(value);\r\n\r\n        if (!oldNode || oldNode.constructor != nodeType) {\r\n          setAnimated(this, nodeType.create(value));\r\n        } else {\r\n          oldNode.setValue(value);\r\n        }\r\n\r\n        if (oldNode) {\r\n          raf.batchedUpdates(() => {\r\n            this._onChange(value, idle);\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return getAnimated(this);\r\n  }\r\n\r\n  _onStart() {\r\n    const anim = this.animation;\r\n\r\n    if (!anim.changed) {\r\n      anim.changed = true;\r\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\r\n    }\r\n  }\r\n\r\n  _onChange(value, idle) {\r\n    if (!idle) {\r\n      this._onStart();\r\n\r\n      callProp(this.animation.onChange, value, this);\r\n    }\r\n\r\n    callProp(this.defaultProps.onChange, value, this);\r\n\r\n    super._onChange(value, idle);\r\n  }\r\n\r\n  _start() {\r\n    const anim = this.animation;\r\n    getAnimated(this).reset(getFluidValue(anim.to));\r\n\r\n    if (!anim.immediate) {\r\n      anim.fromValues = anim.values.map(node => node.lastPosition);\r\n    }\r\n\r\n    if (!isAnimating(this)) {\r\n      setActiveBit(this, true);\r\n\r\n      if (!isPaused(this)) {\r\n        this._resume();\r\n      }\r\n    }\r\n  }\r\n\r\n  _resume() {\r\n    if (Globals.skipAnimation) {\r\n      this.finish();\r\n    } else {\r\n      frameLoop.start(this);\r\n    }\r\n  }\r\n\r\n  _stop(goal, cancel) {\r\n    if (isAnimating(this)) {\r\n      setActiveBit(this, false);\r\n      const anim = this.animation;\r\n      each(anim.values, node => {\r\n        node.done = true;\r\n      });\r\n\r\n      if (anim.toValues) {\r\n        anim.onChange = anim.onPause = anim.onResume = undefined;\r\n      }\r\n\r\n      callFluidObservers(this, {\r\n        type: 'idle',\r\n        parent: this\r\n      });\r\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\r\n      flushCalls(this._pendingCalls, result);\r\n\r\n      if (anim.changed) {\r\n        anim.changed = false;\r\n        sendEvent(this, 'onRest', result, this);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction checkFinished(target, to) {\r\n  const goal = computeGoal(to);\r\n  const value = computeGoal(target.get());\r\n  return isEqual(value, goal);\r\n}\r\n\r\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\r\n  let loopRet = callProp(loop);\r\n\r\n  if (loopRet) {\r\n    const overrides = loopRet !== true && inferTo(loopRet);\r\n    const reverse = (overrides || props).reverse;\r\n    const reset = !overrides || overrides.reset;\r\n    return createUpdate(_extends({}, props, {\r\n      loop,\r\n      default: false,\r\n      pause: undefined,\r\n      to: !reverse || isAsyncTo(to) ? to : undefined,\r\n      from: reset ? props.from : undefined,\r\n      reset\r\n    }, overrides));\r\n  }\r\n}\r\nfunction createUpdate(props) {\r\n  const {\r\n    to,\r\n    from\r\n  } = props = inferTo(props);\r\n  const keys = new Set();\r\n  if (is.obj(to)) findDefined(to, keys);\r\n  if (is.obj(from)) findDefined(from, keys);\r\n  props.keys = keys.size ? Array.from(keys) : null;\r\n  return props;\r\n}\r\nfunction declareUpdate(props) {\r\n  const update = createUpdate(props);\r\n\r\n  if (is.und(update.default)) {\r\n    update.default = getDefaultProps(update);\r\n  }\r\n\r\n  return update;\r\n}\r\n\r\nfunction findDefined(values, keys) {\r\n  eachProp(values, (value, key) => value != null && keys.add(key));\r\n}\r\n\r\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\r\n\r\nfunction mergeActiveFn(target, props, type) {\r\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\r\n}\r\n\r\nfunction sendEvent(target, type, ...args) {\r\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\r\n\r\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\r\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\r\n}\r\n\r\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\r\nlet nextId = 1;\r\nclass Controller {\r\n  constructor(props, flush) {\r\n    this.id = nextId++;\r\n    this.springs = {};\r\n    this.queue = [];\r\n    this.ref = void 0;\r\n    this._flush = void 0;\r\n    this._initialProps = void 0;\r\n    this._lastAsyncId = 0;\r\n    this._active = new Set();\r\n    this._changed = new Set();\r\n    this._started = false;\r\n    this._item = void 0;\r\n    this._state = {\r\n      paused: false,\r\n      pauseQueue: new Set(),\r\n      resumeQueue: new Set(),\r\n      timeouts: new Set()\r\n    };\r\n    this._events = {\r\n      onStart: new Map(),\r\n      onChange: new Map(),\r\n      onRest: new Map()\r\n    };\r\n    this._onFrame = this._onFrame.bind(this);\r\n\r\n    if (flush) {\r\n      this._flush = flush;\r\n    }\r\n\r\n    if (props) {\r\n      this.start(_extends({\r\n        default: true\r\n      }, props));\r\n    }\r\n  }\r\n\r\n  get idle() {\r\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\r\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\r\n    });\r\n  }\r\n\r\n  get item() {\r\n    return this._item;\r\n  }\r\n\r\n  set item(item) {\r\n    this._item = item;\r\n  }\r\n\r\n  get() {\r\n    const values = {};\r\n    this.each((spring, key) => values[key] = spring.get());\r\n    return values;\r\n  }\r\n\r\n  set(values) {\r\n    for (const key in values) {\r\n      const value = values[key];\r\n\r\n      if (!is.und(value)) {\r\n        this.springs[key].set(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  update(props) {\r\n    if (props) {\r\n      this.queue.push(createUpdate(props));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  start(props) {\r\n    let {\r\n      queue\r\n    } = this;\r\n\r\n    if (props) {\r\n      queue = toArray(props).map(createUpdate);\r\n    } else {\r\n      this.queue = [];\r\n    }\r\n\r\n    if (this._flush) {\r\n      return this._flush(this, queue);\r\n    }\r\n\r\n    prepareKeys(this, queue);\r\n    return flushUpdateQueue(this, queue);\r\n  }\r\n\r\n  stop(arg, keys) {\r\n    if (arg !== !!arg) {\r\n      keys = arg;\r\n    }\r\n\r\n    if (keys) {\r\n      const springs = this.springs;\r\n      each(toArray(keys), key => springs[key].stop(!!arg));\r\n    } else {\r\n      stopAsync(this._state, this._lastAsyncId);\r\n      this.each(spring => spring.stop(!!arg));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  pause(keys) {\r\n    if (is.und(keys)) {\r\n      this.start({\r\n        pause: true\r\n      });\r\n    } else {\r\n      const springs = this.springs;\r\n      each(toArray(keys), key => springs[key].pause());\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  resume(keys) {\r\n    if (is.und(keys)) {\r\n      this.start({\r\n        pause: false\r\n      });\r\n    } else {\r\n      const springs = this.springs;\r\n      each(toArray(keys), key => springs[key].resume());\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  each(iterator) {\r\n    eachProp(this.springs, iterator);\r\n  }\r\n\r\n  _onFrame() {\r\n    const {\r\n      onStart,\r\n      onChange,\r\n      onRest\r\n    } = this._events;\r\n    const active = this._active.size > 0;\r\n    const changed = this._changed.size > 0;\r\n\r\n    if (active && !this._started || changed && !this._started) {\r\n      this._started = true;\r\n      flush(onStart, ([onStart, result]) => {\r\n        result.value = this.get();\r\n        onStart(result, this, this._item);\r\n      });\r\n    }\r\n\r\n    const idle = !active && this._started;\r\n    const values = changed || idle && onRest.size ? this.get() : null;\r\n\r\n    if (changed && onChange.size) {\r\n      flush(onChange, ([onChange, result]) => {\r\n        result.value = values;\r\n        onChange(result, this, this._item);\r\n      });\r\n    }\r\n\r\n    if (idle) {\r\n      this._started = false;\r\n      flush(onRest, ([onRest, result]) => {\r\n        result.value = values;\r\n        onRest(result, this, this._item);\r\n      });\r\n    }\r\n  }\r\n\r\n  eventObserved(event) {\r\n    if (event.type == 'change') {\r\n      this._changed.add(event.parent);\r\n\r\n      if (!event.idle) {\r\n        this._active.add(event.parent);\r\n      }\r\n    } else if (event.type == 'idle') {\r\n      this._active.delete(event.parent);\r\n    } else return;\r\n\r\n    raf.onFrame(this._onFrame);\r\n  }\r\n\r\n}\r\nfunction flushUpdateQueue(ctrl, queue) {\r\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\r\n}\r\nasync function flushUpdate(ctrl, props, isLoop) {\r\n  const {\r\n    keys,\r\n    to,\r\n    from,\r\n    loop,\r\n    onRest,\r\n    onResolve\r\n  } = props;\r\n  const defaults = is.obj(props.default) && props.default;\r\n\r\n  if (loop) {\r\n    props.loop = false;\r\n  }\r\n\r\n  if (to === false) props.to = null;\r\n  if (from === false) props.from = null;\r\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\r\n\r\n  if (asyncTo) {\r\n    props.to = undefined;\r\n    props.onRest = undefined;\r\n\r\n    if (defaults) {\r\n      defaults.onRest = undefined;\r\n    }\r\n  } else {\r\n      each(BATCHED_EVENTS, key => {\r\n        const handler = props[key];\r\n\r\n        if (is.fun(handler)) {\r\n          const queue = ctrl['_events'][key];\r\n\r\n          props[key] = ({\r\n            finished,\r\n            cancelled\r\n          }) => {\r\n            const result = queue.get(handler);\r\n\r\n            if (result) {\r\n              if (!finished) result.finished = false;\r\n              if (cancelled) result.cancelled = true;\r\n            } else {\r\n              queue.set(handler, {\r\n                value: null,\r\n                finished: finished || false,\r\n                cancelled: cancelled || false\r\n              });\r\n            }\r\n          };\r\n\r\n          if (defaults) {\r\n            defaults[key] = props[key];\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  const state = ctrl['_state'];\r\n\r\n  if (props.pause === !state.paused) {\r\n    state.paused = props.pause;\r\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\r\n  } else if (state.paused) {\r\n      props.pause = true;\r\n    }\r\n\r\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\r\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\r\n\r\n  if (asyncTo || cancel && state.asyncId) {\r\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\r\n      props,\r\n      state,\r\n      actions: {\r\n        pause: noop,\r\n        resume: noop,\r\n\r\n        start(props, resolve) {\r\n          if (cancel) {\r\n            stopAsync(state, ctrl['_lastAsyncId']);\r\n            resolve(getCancelledResult(ctrl));\r\n          } else {\r\n            props.onRest = onRest;\r\n            resolve(runAsync(asyncTo, props, state, ctrl));\r\n          }\r\n        }\r\n\r\n      }\r\n    }));\r\n  }\r\n\r\n  if (state.paused) {\r\n    await new Promise(resume => {\r\n      state.resumeQueue.add(resume);\r\n    });\r\n  }\r\n\r\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\r\n\r\n  if (loop && result.finished && !(isLoop && result.noop)) {\r\n    const nextProps = createLoopUpdate(props, loop, to);\r\n\r\n    if (nextProps) {\r\n      prepareKeys(ctrl, [nextProps]);\r\n      return flushUpdate(ctrl, nextProps, true);\r\n    }\r\n  }\r\n\r\n  if (onResolve) {\r\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\r\n  }\r\n\r\n  return result;\r\n}\r\nfunction getSprings(ctrl, props) {\r\n  const springs = _extends({}, ctrl.springs);\r\n\r\n  if (props) {\r\n    each(toArray(props), props => {\r\n      if (is.und(props.keys)) {\r\n        props = createUpdate(props);\r\n      }\r\n\r\n      if (!is.obj(props.to)) {\r\n        props = _extends({}, props, {\r\n          to: undefined\r\n        });\r\n      }\r\n\r\n      prepareSprings(springs, props, key => {\r\n        return createSpring(key);\r\n      });\r\n    });\r\n  }\r\n\r\n  setSprings(ctrl, springs);\r\n  return springs;\r\n}\r\nfunction setSprings(ctrl, springs) {\r\n  eachProp(springs, (spring, key) => {\r\n    if (!ctrl.springs[key]) {\r\n      ctrl.springs[key] = spring;\r\n      addFluidObserver(spring, ctrl);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createSpring(key, observer) {\r\n  const spring = new SpringValue();\r\n  spring.key = key;\r\n\r\n  if (observer) {\r\n    addFluidObserver(spring, observer);\r\n  }\r\n\r\n  return spring;\r\n}\r\n\r\nfunction prepareSprings(springs, props, create) {\r\n  if (props.keys) {\r\n    each(props.keys, key => {\r\n      const spring = springs[key] || (springs[key] = create(key));\r\n      spring['_prepareNode'](props);\r\n    });\r\n  }\r\n}\r\n\r\nfunction prepareKeys(ctrl, queue) {\r\n  each(queue, props => {\r\n    prepareSprings(ctrl.springs, props, key => {\r\n      return createSpring(key, ctrl);\r\n    });\r\n  });\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nconst _excluded$3 = [\"children\"];\r\nconst SpringContext = _ref => {\r\n  let {\r\n    children\r\n  } = _ref,\r\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\r\n\r\n  const inherited = useContext(ctx);\r\n  const pause = props.pause || !!inherited.pause,\r\n        immediate = props.immediate || !!inherited.immediate;\r\n  props = useMemoOne(() => ({\r\n    pause,\r\n    immediate\r\n  }), [pause, immediate]);\r\n  const {\r\n    Provider\r\n  } = ctx;\r\n  return React.createElement(Provider, {\r\n    value: props\r\n  }, children);\r\n};\r\nconst ctx = makeContext(SpringContext, {});\r\nSpringContext.Provider = ctx.Provider;\r\nSpringContext.Consumer = ctx.Consumer;\r\n\r\nfunction makeContext(target, init) {\r\n  Object.assign(target, React.createContext(init));\r\n  target.Provider._context = target;\r\n  target.Consumer._context = target;\r\n  return target;\r\n}\r\n\r\nconst SpringRef = () => {\r\n  const current = [];\r\n\r\n  const SpringRef = function SpringRef(props) {\r\n    deprecateDirectCall();\r\n    const results = [];\r\n    each(current, (ctrl, i) => {\r\n      if (is.und(props)) {\r\n        results.push(ctrl.start());\r\n      } else {\r\n        const update = _getProps(props, ctrl, i);\r\n\r\n        if (update) {\r\n          results.push(ctrl.start(update));\r\n        }\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n\r\n  SpringRef.current = current;\r\n\r\n  SpringRef.add = function (ctrl) {\r\n    if (!current.includes(ctrl)) {\r\n      current.push(ctrl);\r\n    }\r\n  };\r\n\r\n  SpringRef.delete = function (ctrl) {\r\n    const i = current.indexOf(ctrl);\r\n    if (~i) current.splice(i, 1);\r\n  };\r\n\r\n  SpringRef.pause = function () {\r\n    each(current, ctrl => ctrl.pause(...arguments));\r\n    return this;\r\n  };\r\n\r\n  SpringRef.resume = function () {\r\n    each(current, ctrl => ctrl.resume(...arguments));\r\n    return this;\r\n  };\r\n\r\n  SpringRef.set = function (values) {\r\n    each(current, ctrl => ctrl.set(values));\r\n  };\r\n\r\n  SpringRef.start = function (props) {\r\n    const results = [];\r\n    each(current, (ctrl, i) => {\r\n      if (is.und(props)) {\r\n        results.push(ctrl.start());\r\n      } else {\r\n        const update = this._getProps(props, ctrl, i);\r\n\r\n        if (update) {\r\n          results.push(ctrl.start(update));\r\n        }\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n\r\n  SpringRef.stop = function () {\r\n    each(current, ctrl => ctrl.stop(...arguments));\r\n    return this;\r\n  };\r\n\r\n  SpringRef.update = function (props) {\r\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\r\n    return this;\r\n  };\r\n\r\n  const _getProps = function _getProps(arg, ctrl, index) {\r\n    return is.fun(arg) ? arg(index, ctrl) : arg;\r\n  };\r\n\r\n  SpringRef._getProps = _getProps;\r\n  return SpringRef;\r\n};\r\n\r\nfunction useSprings(length, props, deps) {\r\n  const propsFn = is.fun(props) && props;\r\n  if (propsFn && !deps) deps = [];\r\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\r\n  const layoutId = useRef(0);\r\n  const forceUpdate = useForceUpdate();\r\n  const state = useMemo(() => ({\r\n    ctrls: [],\r\n    queue: [],\r\n\r\n    flush(ctrl, updates) {\r\n      const springs = getSprings(ctrl, updates);\r\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\r\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\r\n        setSprings(ctrl, springs);\r\n        state.queue.push(() => {\r\n          resolve(flushUpdateQueue(ctrl, updates));\r\n        });\r\n        forceUpdate();\r\n      });\r\n    }\r\n\r\n  }), []);\r\n  const ctrls = useRef([...state.ctrls]);\r\n  const updates = [];\r\n  const prevLength = usePrev(length) || 0;\r\n  useMemo(() => {\r\n    each(ctrls.current.slice(length, prevLength), ctrl => {\r\n      detachRefs(ctrl, ref);\r\n      ctrl.stop(true);\r\n    });\r\n    ctrls.current.length = length;\r\n    declareUpdates(prevLength, length);\r\n  }, [length]);\r\n  useMemo(() => {\r\n    declareUpdates(0, Math.min(prevLength, length));\r\n  }, deps);\r\n\r\n  function declareUpdates(startIndex, endIndex) {\r\n    for (let i = startIndex; i < endIndex; i++) {\r\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\r\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\r\n\r\n      if (update) {\r\n        updates[i] = declareUpdate(update);\r\n      }\r\n    }\r\n  }\r\n\r\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\r\n  const context = useContext(SpringContext);\r\n  const prevContext = usePrev(context);\r\n  const hasContext = context !== prevContext && hasProps(context);\r\n  useLayoutEffect(() => {\r\n    layoutId.current++;\r\n    state.ctrls = ctrls.current;\r\n    const {\r\n      queue\r\n    } = state;\r\n\r\n    if (queue.length) {\r\n      state.queue = [];\r\n      each(queue, cb => cb());\r\n    }\r\n\r\n    each(ctrls.current, (ctrl, i) => {\r\n      ref == null ? void 0 : ref.add(ctrl);\r\n\r\n      if (hasContext) {\r\n        ctrl.start({\r\n          default: context\r\n        });\r\n      }\r\n\r\n      const update = updates[i];\r\n\r\n      if (update) {\r\n        replaceRef(ctrl, update.ref);\r\n\r\n        if (ctrl.ref) {\r\n          ctrl.queue.push(update);\r\n        } else {\r\n          ctrl.start(update);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  useOnce(() => () => {\r\n    each(state.ctrls, ctrl => ctrl.stop(true));\r\n  });\r\n  const values = springs.map(x => _extends({}, x));\r\n  return ref ? [values, ref] : values;\r\n}\r\n\r\nfunction useSpring(props, deps) {\r\n  const isFn = is.fun(props);\r\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\r\n  return isFn || arguments.length == 2 ? [values, ref] : values;\r\n}\r\n\r\nconst initSpringRef = () => SpringRef();\r\n\r\nconst useSpringRef = () => useState(initSpringRef)[0];\r\n\r\nfunction useTrail(length, propsArg, deps) {\r\n  var _passedRef;\r\n\r\n  const propsFn = is.fun(propsArg) && propsArg;\r\n  if (propsFn && !deps) deps = [];\r\n  let reverse = true;\r\n  let passedRef = undefined;\r\n  const result = useSprings(length, (i, ctrl) => {\r\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\r\n    passedRef = props.ref;\r\n    reverse = reverse && props.reverse;\r\n    return props;\r\n  }, deps || [{}]);\r\n  const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\r\n  useLayoutEffect(() => {\r\n    each(ref.current, (ctrl, i) => {\r\n      const parent = ref.current[i + (reverse ? 1 : -1)];\r\n\r\n      if (parent) {\r\n        ctrl.start({\r\n          to: parent.springs\r\n        });\r\n      } else {\r\n        ctrl.start();\r\n      }\r\n    });\r\n  }, deps);\r\n\r\n  ref['start'] = propsArg => {\r\n    const results = [];\r\n    each(ref.current, (ctrl, i) => {\r\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\r\n      const parent = ref.current[i + (reverse ? 1 : -1)];\r\n\r\n      if (parent) {\r\n        results.push(ctrl.start(_extends({}, props, {\r\n          to: parent.springs\r\n        })));\r\n      } else {\r\n        results.push(ctrl.start(_extends({}, props)));\r\n      }\r\n    });\r\n    return results;\r\n  };\r\n\r\n  if (propsFn || arguments.length == 3) {\r\n    ref['_getProps'] = (propsArg, ctrl, i) => {\r\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\r\n\r\n      if (props) {\r\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\r\n        if (parent) props.to = parent.springs;\r\n        return props;\r\n      }\r\n    };\r\n\r\n    return result;\r\n  }\r\n\r\n  return result[0];\r\n}\r\n\r\nlet TransitionPhase;\r\n\r\n(function (TransitionPhase) {\r\n  TransitionPhase[\"MOUNT\"] = \"mount\";\r\n  TransitionPhase[\"ENTER\"] = \"enter\";\r\n  TransitionPhase[\"UPDATE\"] = \"update\";\r\n  TransitionPhase[\"LEAVE\"] = \"leave\";\r\n})(TransitionPhase || (TransitionPhase = {}));\r\n\r\nfunction useTransition(data, props, deps) {\r\n  const propsFn = is.fun(props) && props;\r\n  const {\r\n    reset,\r\n    sort,\r\n    trail = 0,\r\n    expires = true,\r\n    exitBeforeEnter = false,\r\n    onDestroyed,\r\n    ref: propsRef,\r\n    config: propsConfig\r\n  } = propsFn ? propsFn() : props;\r\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\r\n  const items = toArray(data);\r\n  const transitions = [];\r\n  const usedTransitions = useRef(null);\r\n  const prevTransitions = reset ? null : usedTransitions.current;\r\n  useLayoutEffect(() => {\r\n    usedTransitions.current = transitions;\r\n  });\r\n  useOnce(() => () => {\r\n    each(usedTransitions.current, t => {\r\n      if (t.expired) {\r\n        clearTimeout(t.expirationId);\r\n      }\r\n\r\n      detachRefs(t.ctrl, ref);\r\n      t.ctrl.stop(true);\r\n    });\r\n  });\r\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\r\n  const expired = reset && usedTransitions.current || [];\r\n  useLayoutEffect(() => each(expired, ({\r\n    ctrl,\r\n    item,\r\n    key\r\n  }) => {\r\n    detachRefs(ctrl, ref);\r\n    callProp(onDestroyed, item, key);\r\n  }));\r\n  const reused = [];\r\n  if (prevTransitions) each(prevTransitions, (t, i) => {\r\n    if (t.expired) {\r\n      clearTimeout(t.expirationId);\r\n      expired.push(t);\r\n    } else {\r\n      i = reused[i] = keys.indexOf(t.key);\r\n      if (~i) transitions[i] = t;\r\n    }\r\n  });\r\n  each(items, (item, i) => {\r\n    if (!transitions[i]) {\r\n      transitions[i] = {\r\n        key: keys[i],\r\n        item,\r\n        phase: TransitionPhase.MOUNT,\r\n        ctrl: new Controller()\r\n      };\r\n      transitions[i].ctrl.item = item;\r\n    }\r\n  });\r\n\r\n  if (reused.length) {\r\n    let i = -1;\r\n    const {\r\n      leave\r\n    } = propsFn ? propsFn() : props;\r\n    each(reused, (keyIndex, prevIndex) => {\r\n      const t = prevTransitions[prevIndex];\r\n\r\n      if (~keyIndex) {\r\n        i = transitions.indexOf(t);\r\n        transitions[i] = _extends({}, t, {\r\n          item: items[keyIndex]\r\n        });\r\n      } else if (leave) {\r\n        transitions.splice(++i, 0, t);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (is.fun(sort)) {\r\n    transitions.sort((a, b) => sort(a.item, b.item));\r\n  }\r\n\r\n  let delay = -trail;\r\n  const forceUpdate = useForceUpdate();\r\n  const defaultProps = getDefaultProps(props);\r\n  const changes = new Map();\r\n  const exitingTransitions = useRef(new Map());\r\n  const forceChange = useRef(false);\r\n  each(transitions, (t, i) => {\r\n    const key = t.key;\r\n    const prevPhase = t.phase;\r\n    const p = propsFn ? propsFn() : props;\r\n    let to;\r\n    let phase;\r\n    let propsDelay = callProp(p.delay || 0, key);\r\n\r\n    if (prevPhase == TransitionPhase.MOUNT) {\r\n      to = p.enter;\r\n      phase = TransitionPhase.ENTER;\r\n    } else {\r\n      const isLeave = keys.indexOf(key) < 0;\r\n\r\n      if (prevPhase != TransitionPhase.LEAVE) {\r\n        if (isLeave) {\r\n          to = p.leave;\r\n          phase = TransitionPhase.LEAVE;\r\n        } else if (to = p.update) {\r\n          phase = TransitionPhase.UPDATE;\r\n        } else return;\r\n      } else if (!isLeave) {\r\n        to = p.enter;\r\n        phase = TransitionPhase.ENTER;\r\n      } else return;\r\n    }\r\n\r\n    to = callProp(to, t.item, i);\r\n    to = is.obj(to) ? inferTo(to) : {\r\n      to\r\n    };\r\n\r\n    if (!to.config) {\r\n      const config = propsConfig || defaultProps.config;\r\n      to.config = callProp(config, t.item, i, phase);\r\n    }\r\n\r\n    delay += trail;\r\n\r\n    const payload = _extends({}, defaultProps, {\r\n      delay: propsDelay + delay,\r\n      ref: propsRef,\r\n      immediate: p.immediate,\r\n      reset: false\r\n    }, to);\r\n\r\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\r\n      const _p = propsFn ? propsFn() : props;\r\n\r\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\r\n      payload.from = callProp(from, t.item, i);\r\n    }\r\n\r\n    const {\r\n      onResolve\r\n    } = payload;\r\n\r\n    payload.onResolve = result => {\r\n      callProp(onResolve, result);\r\n      const transitions = usedTransitions.current;\r\n      const t = transitions.find(t => t.key === key);\r\n      if (!t) return;\r\n\r\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\r\n        return;\r\n      }\r\n\r\n      if (t.ctrl.idle) {\r\n        const idle = transitions.every(t => t.ctrl.idle);\r\n\r\n        if (t.phase == TransitionPhase.LEAVE) {\r\n          const expiry = callProp(expires, t.item);\r\n\r\n          if (expiry !== false) {\r\n            const expiryMs = expiry === true ? 0 : expiry;\r\n            t.expired = true;\r\n\r\n            if (!idle && expiryMs > 0) {\r\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (idle && transitions.some(t => t.expired)) {\r\n          exitingTransitions.current.delete(t);\r\n\r\n          if (exitBeforeEnter) {\r\n            forceChange.current = true;\r\n          }\r\n\r\n          forceUpdate();\r\n        }\r\n      }\r\n    };\r\n\r\n    const springs = getSprings(t.ctrl, payload);\r\n\r\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\r\n      exitingTransitions.current.set(t, {\r\n        phase,\r\n        springs,\r\n        payload\r\n      });\r\n    } else {\r\n      changes.set(t, {\r\n        phase,\r\n        springs,\r\n        payload\r\n      });\r\n    }\r\n  });\r\n  const context = useContext(SpringContext);\r\n  const prevContext = usePrev(context);\r\n  const hasContext = context !== prevContext && hasProps(context);\r\n  useLayoutEffect(() => {\r\n    if (hasContext) {\r\n      each(transitions, t => {\r\n        t.ctrl.start({\r\n          default: context\r\n        });\r\n      });\r\n    }\r\n  }, [context]);\r\n  each(changes, (_, t) => {\r\n    if (exitingTransitions.current.size) {\r\n      const ind = transitions.findIndex(state => state.key === t.key);\r\n      transitions.splice(ind, 1);\r\n    }\r\n  });\r\n  useLayoutEffect(() => {\r\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, ({\r\n      phase,\r\n      payload\r\n    }, t) => {\r\n      const {\r\n        ctrl\r\n      } = t;\r\n      t.phase = phase;\r\n      ref == null ? void 0 : ref.add(ctrl);\r\n\r\n      if (hasContext && phase == TransitionPhase.ENTER) {\r\n        ctrl.start({\r\n          default: context\r\n        });\r\n      }\r\n\r\n      if (payload) {\r\n        replaceRef(ctrl, payload.ref);\r\n\r\n        if (ctrl.ref && !forceChange.current) {\r\n          ctrl.update(payload);\r\n        } else {\r\n          ctrl.start(payload);\r\n\r\n          if (forceChange.current) {\r\n            forceChange.current = false;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }, reset ? void 0 : deps);\r\n\r\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\r\n    const {\r\n      springs\r\n    } = changes.get(t) || t.ctrl;\r\n    const elem = render(_extends({}, springs), t.item, t, i);\r\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\r\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\r\n      ref: elem.ref\r\n    })) : elem;\r\n  }));\r\n\r\n  return ref ? [renderTransitions, ref] : renderTransitions;\r\n}\r\nlet nextKey = 1;\r\n\r\nfunction getKeys(items, {\r\n  key,\r\n  keys = key\r\n}, prevTransitions) {\r\n  if (keys === null) {\r\n    const reused = new Set();\r\n    return items.map(item => {\r\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\r\n\r\n      if (t) {\r\n        reused.add(t);\r\n        return t.key;\r\n      }\r\n\r\n      return nextKey++;\r\n    });\r\n  }\r\n\r\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\r\n}\r\n\r\nconst _excluded$2 = [\"children\"];\r\nfunction Spring(_ref) {\r\n  let {\r\n    children\r\n  } = _ref,\r\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\r\n\r\n  return children(useSpring(props));\r\n}\r\n\r\nconst _excluded$1 = [\"items\", \"children\"];\r\nfunction Trail(_ref) {\r\n  let {\r\n    items,\r\n    children\r\n  } = _ref,\r\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\r\n\r\n  const trails = useTrail(items.length, props);\r\n  return items.map((item, index) => {\r\n    const result = children(item, index);\r\n    return is.fun(result) ? result(trails[index]) : result;\r\n  });\r\n}\r\n\r\nconst _excluded = [\"items\", \"children\"];\r\nfunction Transition(_ref) {\r\n  let {\r\n    items,\r\n    children\r\n  } = _ref,\r\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n  return useTransition(items, props)(children);\r\n}\r\n\r\nclass Interpolation extends FrameValue {\r\n  constructor(source, args) {\r\n    super();\r\n    this.key = void 0;\r\n    this.idle = true;\r\n    this.calc = void 0;\r\n    this._active = new Set();\r\n    this.source = source;\r\n    this.calc = createInterpolator(...args);\r\n\r\n    const value = this._get();\r\n\r\n    const nodeType = getAnimatedType(value);\r\n    setAnimated(this, nodeType.create(value));\r\n  }\r\n\r\n  advance(_dt) {\r\n    const value = this._get();\r\n\r\n    const oldValue = this.get();\r\n\r\n    if (!isEqual(value, oldValue)) {\r\n      getAnimated(this).setValue(value);\r\n\r\n      this._onChange(value, this.idle);\r\n    }\r\n\r\n    if (!this.idle && checkIdle(this._active)) {\r\n      becomeIdle(this);\r\n    }\r\n  }\r\n\r\n  _get() {\r\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\r\n    return this.calc(...inputs);\r\n  }\r\n\r\n  _start() {\r\n    if (this.idle && !checkIdle(this._active)) {\r\n      this.idle = false;\r\n      each(getPayload(this), node => {\r\n        node.done = false;\r\n      });\r\n\r\n      if (Globals.skipAnimation) {\r\n        raf.batchedUpdates(() => this.advance());\r\n        becomeIdle(this);\r\n      } else {\r\n        frameLoop.start(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  _attach() {\r\n    let priority = 1;\r\n    each(toArray(this.source), source => {\r\n      if (hasFluidValue(source)) {\r\n        addFluidObserver(source, this);\r\n      }\r\n\r\n      if (isFrameValue(source)) {\r\n        if (!source.idle) {\r\n          this._active.add(source);\r\n        }\r\n\r\n        priority = Math.max(priority, source.priority + 1);\r\n      }\r\n    });\r\n    this.priority = priority;\r\n\r\n    this._start();\r\n  }\r\n\r\n  _detach() {\r\n    each(toArray(this.source), source => {\r\n      if (hasFluidValue(source)) {\r\n        removeFluidObserver(source, this);\r\n      }\r\n    });\r\n\r\n    this._active.clear();\r\n\r\n    becomeIdle(this);\r\n  }\r\n\r\n  eventObserved(event) {\r\n    if (event.type == 'change') {\r\n      if (event.idle) {\r\n        this.advance();\r\n      } else {\r\n        this._active.add(event.parent);\r\n\r\n        this._start();\r\n      }\r\n    } else if (event.type == 'idle') {\r\n        this._active.delete(event.parent);\r\n      } else if (event.type == 'priority') {\r\n          this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\r\n        }\r\n  }\r\n\r\n}\r\n\r\nfunction isIdle(source) {\r\n  return source.idle !== false;\r\n}\r\n\r\nfunction checkIdle(active) {\r\n  return !active.size || Array.from(active).every(isIdle);\r\n}\r\n\r\nfunction becomeIdle(self) {\r\n  if (!self.idle) {\r\n    self.idle = true;\r\n    each(getPayload(self), node => {\r\n      node.done = true;\r\n    });\r\n    callFluidObservers(self, {\r\n      type: 'idle',\r\n      parent: self\r\n    });\r\n  }\r\n}\r\n\r\nconst to = (source, ...args) => new Interpolation(source, args);\r\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\r\n\r\nGlobals.assign({\r\n  createStringInterpolator,\r\n  to: (source, args) => new Interpolation(source, args)\r\n});\r\nconst update = frameLoop.advance;\r\n\r\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, easings, inferTo, interpolate, to, update, useChain, useSpring, useSpringRef, useSprings, useTrail, useTransition };\r\n","import * as React from 'react';\r\nimport { useContext, useRef, useState, useEffect } from 'react';\r\nimport { useMemoOne, useOnce, raf } from '@react-spring/shared';\r\nimport { Controller, a, config } from '@react-spring/web';\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nconst _excluded = [\"horizontal\", \"factor\", \"offset\", \"speed\", \"sticky\"],\r\n      _excluded2 = [\"pages\", \"innerStyle\", \"config\", \"enabled\", \"horizontal\", \"children\"];\r\nconst ParentContext = React.createContext(null);\r\n\r\nfunction getScrollType(horizontal) {\r\n  return horizontal ? 'scrollLeft' : 'scrollTop';\r\n}\r\n\r\nfunction mapChildrenRecursive(children, callback) {\r\n  const isReactFragment = node => {\r\n    if (node.type) {\r\n      return node.type === React.Fragment;\r\n    }\r\n\r\n    return node === React.Fragment;\r\n  };\r\n\r\n  return React.Children.map(children, child => isReactFragment(child) ? mapChildrenRecursive(child.props.children, callback) : callback(child));\r\n}\r\n\r\nconst START_TRANSLATE_3D = 'translate3d(0px,0px,0px)';\r\nconst START_TRANSLATE = 'translate(0px,0px)';\r\nconst ParallaxLayer = React.memo(React.forwardRef((_ref, ref) => {\r\n  let {\r\n    horizontal,\r\n    factor = 1,\r\n    offset = 0,\r\n    speed = 0,\r\n    sticky\r\n  } = _ref,\r\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n  const parent = useContext(ParentContext);\r\n  const ctrl = useMemoOne(() => {\r\n    let translate;\r\n\r\n    if (sticky) {\r\n      const start = sticky.start || 0;\r\n      translate = start * parent.space;\r\n    } else {\r\n      const targetScroll = Math.floor(offset) * parent.space;\r\n      const distance = parent.space * offset + targetScroll * speed;\r\n      translate = -(parent.current * speed) + distance;\r\n    }\r\n\r\n    return new Controller({\r\n      space: sticky ? parent.space : parent.space * factor,\r\n      translate\r\n    });\r\n  }, []);\r\n  const layer = useMemoOne(() => ({\r\n    horizontal: horizontal === undefined || sticky ? parent.horizontal : horizontal,\r\n    sticky: undefined,\r\n    isSticky: false,\r\n\r\n    setPosition(height, scrollTop, immediate = false) {\r\n      if (sticky) {\r\n        setSticky(height, scrollTop);\r\n      } else {\r\n        const targetScroll = Math.floor(offset) * height;\r\n        const distance = height * offset + targetScroll * speed;\r\n        ctrl.start({\r\n          translate: -(scrollTop * speed) + distance,\r\n          config: parent.config,\r\n          immediate\r\n        });\r\n      }\r\n    },\r\n\r\n    setHeight(height, immediate = false) {\r\n      ctrl.start({\r\n        space: sticky ? height : height * factor,\r\n        config: parent.config,\r\n        immediate\r\n      });\r\n    }\r\n\r\n  }), []);\r\n  useOnce(() => {\r\n    if (sticky) {\r\n      const start = sticky.start || 0;\r\n      const end = sticky.end || start + 1;\r\n      layer.sticky = {\r\n        start,\r\n        end\r\n      };\r\n    }\r\n  });\r\n  React.useImperativeHandle(ref, () => layer);\r\n  const layerRef = useRef();\r\n\r\n  const setSticky = (height, scrollTop) => {\r\n    const start = layer.sticky.start * height;\r\n    const end = layer.sticky.end * height;\r\n    const isSticky = scrollTop >= start && scrollTop <= end;\r\n    if (isSticky === layer.isSticky) return;\r\n    layer.isSticky = isSticky;\r\n    const ref = layerRef.current;\r\n    ref.style.position = isSticky ? 'sticky' : 'absolute';\r\n    ctrl.set({\r\n      translate: isSticky ? 0 : scrollTop < start ? start : end\r\n    });\r\n  };\r\n\r\n  useOnce(() => {\r\n    if (parent) {\r\n      parent.layers.add(layer);\r\n      parent.update();\r\n      return () => {\r\n        parent.layers.delete(layer);\r\n        parent.update();\r\n      };\r\n    }\r\n  });\r\n  const translate3d = ctrl.springs.translate.to(layer.horizontal ? x => `translate3d(${x}px,0,0)` : y => `translate3d(0,${y}px,0)`);\r\n  return React.createElement(a.div, _extends({}, rest, {\r\n    ref: layerRef,\r\n    style: _extends({\r\n      position: 'absolute',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundSize: 'auto',\r\n      backgroundRepeat: 'no-repeat',\r\n      willChange: 'transform',\r\n      [layer.horizontal ? 'height' : 'width']: '100%',\r\n      [layer.horizontal ? 'width' : 'height']: ctrl.springs.space,\r\n      WebkitTransform: translate3d,\r\n      msTransform: translate3d,\r\n      transform: translate3d\r\n    }, rest.style)\r\n  }));\r\n}));\r\nconst Parallax = React.memo(React.forwardRef((props, ref) => {\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const {\r\n    pages,\r\n    config: config$1 = config.slow,\r\n    enabled = true,\r\n    horizontal = false,\r\n    children\r\n  } = props,\r\n        rest = _objectWithoutPropertiesLoose(props, _excluded2);\r\n\r\n  const containerRef = useRef();\r\n  const contentRef = useRef();\r\n  const state = useMemoOne(() => ({\r\n    config: config$1,\r\n    horizontal,\r\n    busy: false,\r\n    space: 0,\r\n    current: 0,\r\n    offset: 0,\r\n    controller: new Controller({\r\n      scroll: 0\r\n    }),\r\n    layers: new Set(),\r\n    container: containerRef,\r\n    content: contentRef,\r\n    update: () => update(),\r\n    scrollTo: offset => scrollTo(offset),\r\n    stop: () => state.controller.stop()\r\n  }), []);\r\n  useEffect(() => {\r\n    state.config = config$1;\r\n  }, [config$1]);\r\n  React.useImperativeHandle(ref, () => state);\r\n\r\n  const update = () => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    const spaceProp = horizontal ? 'clientWidth' : 'clientHeight';\r\n    state.space = container[spaceProp];\r\n    const scrollType = getScrollType(horizontal);\r\n\r\n    if (enabled) {\r\n      state.current = container[scrollType];\r\n    } else {\r\n      container[scrollType] = state.current = state.offset * state.space;\r\n    }\r\n\r\n    const content = contentRef.current;\r\n\r\n    if (content) {\r\n      const sizeProp = horizontal ? 'width' : 'height';\r\n      content.style[sizeProp] = `${state.space * pages}px`;\r\n    }\r\n\r\n    state.layers.forEach(layer => {\r\n      layer.setHeight(state.space, true);\r\n      layer.setPosition(state.space, state.current, true);\r\n    });\r\n  };\r\n\r\n  const scrollTo = offset => {\r\n    const container = containerRef.current;\r\n    const scrollType = getScrollType(horizontal);\r\n    state.offset = offset;\r\n    state.controller.set({\r\n      scroll: state.current\r\n    });\r\n    state.controller.stop().start({\r\n      scroll: offset * state.space,\r\n      config: config$1,\r\n\r\n      onChange({\r\n        value: {\r\n          scroll\r\n        }\r\n      }) {\r\n        container[scrollType] = scroll;\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  const onScroll = event => {\r\n    if (!state.busy) {\r\n      state.busy = true;\r\n      state.current = event.target[getScrollType(horizontal)];\r\n      raf.onStart(() => {\r\n        state.layers.forEach(layer => layer.setPosition(state.space, state.current));\r\n        state.busy = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => state.update());\r\n  useOnce(() => {\r\n    setReady(true);\r\n\r\n    const onResize = () => {\r\n      const update = () => state.update();\r\n\r\n      raf.onFrame(update);\r\n      setTimeout(update, 150);\r\n    };\r\n\r\n    window.addEventListener('resize', onResize, false);\r\n    return () => window.removeEventListener('resize', onResize, false);\r\n  });\r\n  const overflow = enabled ? {\r\n    overflowY: horizontal ? 'hidden' : 'scroll',\r\n    overflowX: horizontal ? 'scroll' : 'hidden'\r\n  } : {\r\n    overflowY: 'hidden',\r\n    overflowX: 'hidden'\r\n  };\r\n  return React.createElement(a.div, _extends({}, rest, {\r\n    ref: containerRef,\r\n    onScroll: onScroll,\r\n    onWheel: enabled ? state.stop : undefined,\r\n    onTouchStart: enabled ? state.stop : undefined,\r\n    style: _extends({\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%'\r\n    }, overflow, {\r\n      WebkitOverflowScrolling: 'touch',\r\n      WebkitTransform: START_TRANSLATE,\r\n      msTransform: START_TRANSLATE,\r\n      transform: START_TRANSLATE_3D\r\n    }, rest.style)\r\n  }), ready && React.createElement(React.Fragment, null, React.createElement(a.div, {\r\n    ref: contentRef,\r\n    style: _extends({\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      [horizontal ? 'height' : 'width']: '100%',\r\n      [horizontal ? 'width' : 'height']: state.space * pages,\r\n      WebkitTransform: START_TRANSLATE,\r\n      msTransform: START_TRANSLATE,\r\n      transform: START_TRANSLATE_3D\r\n    }, props.innerStyle)\r\n  }, React.createElement(ParentContext.Provider, {\r\n    value: state\r\n  }, mapChildrenRecursive(children, child => !child.props.sticky && child))), React.createElement(ParentContext.Provider, {\r\n    value: state\r\n  }, mapChildrenRecursive(children, child => child.props.sticky && child))));\r\n}));\r\n\r\nexport { Parallax, ParallaxLayer };\r\n","let updateQueue = makeQueue();\r\nconst raf = fn => schedule(fn, updateQueue);\r\nlet writeQueue = makeQueue();\r\n\r\nraf.write = fn => schedule(fn, writeQueue);\r\n\r\nlet onStartQueue = makeQueue();\r\n\r\nraf.onStart = fn => schedule(fn, onStartQueue);\r\n\r\nlet onFrameQueue = makeQueue();\r\n\r\nraf.onFrame = fn => schedule(fn, onFrameQueue);\r\n\r\nlet onFinishQueue = makeQueue();\r\n\r\nraf.onFinish = fn => schedule(fn, onFinishQueue);\r\n\r\nlet timeouts = [];\r\n\r\nraf.setTimeout = (handler, ms) => {\r\n  let time = raf.now() + ms;\r\n\r\n  let cancel = () => {\r\n    let i = timeouts.findIndex(t => t.cancel == cancel);\r\n    if (~i) timeouts.splice(i, 1);\r\n    pendingCount -= ~i ? 1 : 0;\r\n  };\r\n\r\n  let timeout = {\r\n    time,\r\n    handler,\r\n    cancel\r\n  };\r\n  timeouts.splice(findTimeout(time), 0, timeout);\r\n  pendingCount += 1;\r\n  start();\r\n  return timeout;\r\n};\r\n\r\nlet findTimeout = time => ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length);\r\n\r\nraf.cancel = fn => {\r\n  onStartQueue.delete(fn);\r\n  onFrameQueue.delete(fn);\r\n  updateQueue.delete(fn);\r\n  writeQueue.delete(fn);\r\n  onFinishQueue.delete(fn);\r\n};\r\n\r\nraf.sync = fn => {\r\n  sync = true;\r\n  raf.batchedUpdates(fn);\r\n  sync = false;\r\n};\r\n\r\nraf.throttle = fn => {\r\n  let lastArgs;\r\n\r\n  function queuedFn() {\r\n    try {\r\n      fn(...lastArgs);\r\n    } finally {\r\n      lastArgs = null;\r\n    }\r\n  }\r\n\r\n  function throttled(...args) {\r\n    lastArgs = args;\r\n    raf.onStart(queuedFn);\r\n  }\r\n\r\n  throttled.handler = fn;\r\n\r\n  throttled.cancel = () => {\r\n    onStartQueue.delete(queuedFn);\r\n    lastArgs = null;\r\n  };\r\n\r\n  return throttled;\r\n};\r\n\r\nlet nativeRaf = typeof window != 'undefined' ? window.requestAnimationFrame : () => {};\r\n\r\nraf.use = impl => nativeRaf = impl;\r\n\r\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now;\r\n\r\nraf.batchedUpdates = fn => fn();\r\n\r\nraf.catch = console.error;\r\nraf.frameLoop = 'always';\r\n\r\nraf.advance = () => {\r\n  if (raf.frameLoop !== 'demand') {\r\n    console.warn('Cannot call the manual advancement of rafz whilst frameLoop is not set as demand');\r\n  } else {\r\n    update();\r\n  }\r\n};\r\n\r\nlet ts = -1;\r\nlet pendingCount = 0;\r\nlet sync = false;\r\n\r\nfunction schedule(fn, queue) {\r\n  if (sync) {\r\n    queue.delete(fn);\r\n    fn(0);\r\n  } else {\r\n    queue.add(fn);\r\n    start();\r\n  }\r\n}\r\n\r\nfunction start() {\r\n  if (ts < 0) {\r\n    ts = 0;\r\n\r\n    if (raf.frameLoop !== 'demand') {\r\n      nativeRaf(loop);\r\n    }\r\n  }\r\n}\r\n\r\nfunction stop() {\r\n  ts = -1;\r\n}\r\n\r\nfunction loop() {\r\n  if (~ts) {\r\n    nativeRaf(loop);\r\n    raf.batchedUpdates(update);\r\n  }\r\n}\r\n\r\nfunction update() {\r\n  let prevTs = ts;\r\n  ts = raf.now();\r\n  let count = findTimeout(ts);\r\n\r\n  if (count) {\r\n    eachSafely(timeouts.splice(0, count), t => t.handler());\r\n    pendingCount -= count;\r\n  }\r\n\r\n  onStartQueue.flush();\r\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);\r\n  onFrameQueue.flush();\r\n  writeQueue.flush();\r\n  onFinishQueue.flush();\r\n\r\n  if (!pendingCount) {\r\n    stop();\r\n  }\r\n}\r\n\r\nfunction makeQueue() {\r\n  let next = new Set();\r\n  let current = next;\r\n  return {\r\n    add(fn) {\r\n      pendingCount += current == next && !next.has(fn) ? 1 : 0;\r\n      next.add(fn);\r\n    },\r\n\r\n    delete(fn) {\r\n      pendingCount -= current == next && next.has(fn) ? 1 : 0;\r\n      return next.delete(fn);\r\n    },\r\n\r\n    flush(arg) {\r\n      if (current.size) {\r\n        next = new Set();\r\n        pendingCount -= current.size;\r\n        eachSafely(current, fn => fn(arg) && next.add(fn));\r\n        pendingCount += next.size;\r\n        current = next;\r\n      }\r\n    }\r\n\r\n  };\r\n}\r\n\r\nfunction eachSafely(values, each) {\r\n  values.forEach(value => {\r\n    try {\r\n      each(value);\r\n    } catch (e) {\r\n      raf.catch(e);\r\n    }\r\n  });\r\n}\r\n\r\nconst __raf = {\r\n  count() {\r\n    return pendingCount;\r\n  },\r\n\r\n  isRunning() {\r\n    return ts >= 0;\r\n  },\r\n\r\n  clear() {\r\n    ts = -1;\r\n    timeouts = [];\r\n    onStartQueue = makeQueue();\r\n    updateQueue = makeQueue();\r\n    onFrameQueue = makeQueue();\r\n    writeQueue = makeQueue();\r\n    onFinishQueue = makeQueue();\r\n    pendingCount = 0;\r\n  }\r\n\r\n};\r\n\r\nexport { __raf, raf };\r\n","import { raf } from '@react-spring/rafz';\r\nexport { raf } from '@react-spring/rafz';\r\nimport * as React from 'react';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nfunction noop() {}\r\nconst defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {\r\n  value,\r\n  writable: true,\r\n  configurable: true\r\n});\r\nconst is = {\r\n  arr: Array.isArray,\r\n  obj: a => !!a && a.constructor.name === 'Object',\r\n  fun: a => typeof a === 'function',\r\n  str: a => typeof a === 'string',\r\n  num: a => typeof a === 'number',\r\n  und: a => a === undefined\r\n};\r\nfunction isEqual(a, b) {\r\n  if (is.arr(a)) {\r\n    if (!is.arr(b) || a.length !== b.length) return false;\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  return a === b;\r\n}\r\nconst each = (obj, fn) => obj.forEach(fn);\r\nfunction eachProp(obj, fn, ctx) {\r\n  if (is.arr(obj)) {\r\n    for (let i = 0; i < obj.length; i++) {\r\n      fn.call(ctx, obj[i], `${i}`);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      fn.call(ctx, obj[key], key);\r\n    }\r\n  }\r\n}\r\nconst toArray = a => is.und(a) ? [] : is.arr(a) ? a : [a];\r\nfunction flush(queue, iterator) {\r\n  if (queue.size) {\r\n    const items = Array.from(queue);\r\n    queue.clear();\r\n    each(items, iterator);\r\n  }\r\n}\r\nconst flushCalls = (queue, ...args) => flush(queue, fn => fn(...args));\r\nconst isSSR = () => typeof window === 'undefined' || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\r\n\r\nlet createStringInterpolator$1;\r\nlet to;\r\nlet colors$1 = null;\r\nlet skipAnimation = false;\r\nlet willAdvance = noop;\r\nconst assign = globals => {\r\n  if (globals.to) to = globals.to;\r\n  if (globals.now) raf.now = globals.now;\r\n  if (globals.colors !== undefined) colors$1 = globals.colors;\r\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation;\r\n  if (globals.createStringInterpolator) createStringInterpolator$1 = globals.createStringInterpolator;\r\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame);\r\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates;\r\n  if (globals.willAdvance) willAdvance = globals.willAdvance;\r\n  if (globals.frameLoop) raf.frameLoop = globals.frameLoop;\r\n};\r\n\r\nvar globals = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  get createStringInterpolator () { return createStringInterpolator$1; },\r\n  get to () { return to; },\r\n  get colors () { return colors$1; },\r\n  get skipAnimation () { return skipAnimation; },\r\n  get willAdvance () { return willAdvance; },\r\n  assign: assign\r\n});\r\n\r\nconst startQueue = new Set();\r\nlet currentFrame = [];\r\nlet prevFrame = [];\r\nlet priority = 0;\r\nconst frameLoop = {\r\n  get idle() {\r\n    return !startQueue.size && !currentFrame.length;\r\n  },\r\n\r\n  start(animation) {\r\n    if (priority > animation.priority) {\r\n      startQueue.add(animation);\r\n      raf.onStart(flushStartQueue);\r\n    } else {\r\n      startSafely(animation);\r\n      raf(advance);\r\n    }\r\n  },\r\n\r\n  advance,\r\n\r\n  sort(animation) {\r\n    if (priority) {\r\n      raf.onFrame(() => frameLoop.sort(animation));\r\n    } else {\r\n      const prevIndex = currentFrame.indexOf(animation);\r\n\r\n      if (~prevIndex) {\r\n        currentFrame.splice(prevIndex, 1);\r\n        startUnsafely(animation);\r\n      }\r\n    }\r\n  },\r\n\r\n  clear() {\r\n    currentFrame = [];\r\n    startQueue.clear();\r\n  }\r\n\r\n};\r\n\r\nfunction flushStartQueue() {\r\n  startQueue.forEach(startSafely);\r\n  startQueue.clear();\r\n  raf(advance);\r\n}\r\n\r\nfunction startSafely(animation) {\r\n  if (!currentFrame.includes(animation)) startUnsafely(animation);\r\n}\r\n\r\nfunction startUnsafely(animation) {\r\n  currentFrame.splice(findIndex(currentFrame, other => other.priority > animation.priority), 0, animation);\r\n}\r\n\r\nfunction advance(dt) {\r\n  const nextFrame = prevFrame;\r\n\r\n  for (let i = 0; i < currentFrame.length; i++) {\r\n    const animation = currentFrame[i];\r\n    priority = animation.priority;\r\n\r\n    if (!animation.idle) {\r\n      willAdvance(animation);\r\n      animation.advance(dt);\r\n\r\n      if (!animation.idle) {\r\n        nextFrame.push(animation);\r\n      }\r\n    }\r\n  }\r\n\r\n  priority = 0;\r\n  prevFrame = currentFrame;\r\n  prevFrame.length = 0;\r\n  currentFrame = nextFrame;\r\n  return currentFrame.length > 0;\r\n}\r\n\r\nfunction findIndex(arr, test) {\r\n  const index = arr.findIndex(test);\r\n  return index < 0 ? arr.length : index;\r\n}\r\n\r\nconst colors = {\r\n  transparent: 0x00000000,\r\n  aliceblue: 0xf0f8ffff,\r\n  antiquewhite: 0xfaebd7ff,\r\n  aqua: 0x00ffffff,\r\n  aquamarine: 0x7fffd4ff,\r\n  azure: 0xf0ffffff,\r\n  beige: 0xf5f5dcff,\r\n  bisque: 0xffe4c4ff,\r\n  black: 0x000000ff,\r\n  blanchedalmond: 0xffebcdff,\r\n  blue: 0x0000ffff,\r\n  blueviolet: 0x8a2be2ff,\r\n  brown: 0xa52a2aff,\r\n  burlywood: 0xdeb887ff,\r\n  burntsienna: 0xea7e5dff,\r\n  cadetblue: 0x5f9ea0ff,\r\n  chartreuse: 0x7fff00ff,\r\n  chocolate: 0xd2691eff,\r\n  coral: 0xff7f50ff,\r\n  cornflowerblue: 0x6495edff,\r\n  cornsilk: 0xfff8dcff,\r\n  crimson: 0xdc143cff,\r\n  cyan: 0x00ffffff,\r\n  darkblue: 0x00008bff,\r\n  darkcyan: 0x008b8bff,\r\n  darkgoldenrod: 0xb8860bff,\r\n  darkgray: 0xa9a9a9ff,\r\n  darkgreen: 0x006400ff,\r\n  darkgrey: 0xa9a9a9ff,\r\n  darkkhaki: 0xbdb76bff,\r\n  darkmagenta: 0x8b008bff,\r\n  darkolivegreen: 0x556b2fff,\r\n  darkorange: 0xff8c00ff,\r\n  darkorchid: 0x9932ccff,\r\n  darkred: 0x8b0000ff,\r\n  darksalmon: 0xe9967aff,\r\n  darkseagreen: 0x8fbc8fff,\r\n  darkslateblue: 0x483d8bff,\r\n  darkslategray: 0x2f4f4fff,\r\n  darkslategrey: 0x2f4f4fff,\r\n  darkturquoise: 0x00ced1ff,\r\n  darkviolet: 0x9400d3ff,\r\n  deeppink: 0xff1493ff,\r\n  deepskyblue: 0x00bfffff,\r\n  dimgray: 0x696969ff,\r\n  dimgrey: 0x696969ff,\r\n  dodgerblue: 0x1e90ffff,\r\n  firebrick: 0xb22222ff,\r\n  floralwhite: 0xfffaf0ff,\r\n  forestgreen: 0x228b22ff,\r\n  fuchsia: 0xff00ffff,\r\n  gainsboro: 0xdcdcdcff,\r\n  ghostwhite: 0xf8f8ffff,\r\n  gold: 0xffd700ff,\r\n  goldenrod: 0xdaa520ff,\r\n  gray: 0x808080ff,\r\n  green: 0x008000ff,\r\n  greenyellow: 0xadff2fff,\r\n  grey: 0x808080ff,\r\n  honeydew: 0xf0fff0ff,\r\n  hotpink: 0xff69b4ff,\r\n  indianred: 0xcd5c5cff,\r\n  indigo: 0x4b0082ff,\r\n  ivory: 0xfffff0ff,\r\n  khaki: 0xf0e68cff,\r\n  lavender: 0xe6e6faff,\r\n  lavenderblush: 0xfff0f5ff,\r\n  lawngreen: 0x7cfc00ff,\r\n  lemonchiffon: 0xfffacdff,\r\n  lightblue: 0xadd8e6ff,\r\n  lightcoral: 0xf08080ff,\r\n  lightcyan: 0xe0ffffff,\r\n  lightgoldenrodyellow: 0xfafad2ff,\r\n  lightgray: 0xd3d3d3ff,\r\n  lightgreen: 0x90ee90ff,\r\n  lightgrey: 0xd3d3d3ff,\r\n  lightpink: 0xffb6c1ff,\r\n  lightsalmon: 0xffa07aff,\r\n  lightseagreen: 0x20b2aaff,\r\n  lightskyblue: 0x87cefaff,\r\n  lightslategray: 0x778899ff,\r\n  lightslategrey: 0x778899ff,\r\n  lightsteelblue: 0xb0c4deff,\r\n  lightyellow: 0xffffe0ff,\r\n  lime: 0x00ff00ff,\r\n  limegreen: 0x32cd32ff,\r\n  linen: 0xfaf0e6ff,\r\n  magenta: 0xff00ffff,\r\n  maroon: 0x800000ff,\r\n  mediumaquamarine: 0x66cdaaff,\r\n  mediumblue: 0x0000cdff,\r\n  mediumorchid: 0xba55d3ff,\r\n  mediumpurple: 0x9370dbff,\r\n  mediumseagreen: 0x3cb371ff,\r\n  mediumslateblue: 0x7b68eeff,\r\n  mediumspringgreen: 0x00fa9aff,\r\n  mediumturquoise: 0x48d1ccff,\r\n  mediumvioletred: 0xc71585ff,\r\n  midnightblue: 0x191970ff,\r\n  mintcream: 0xf5fffaff,\r\n  mistyrose: 0xffe4e1ff,\r\n  moccasin: 0xffe4b5ff,\r\n  navajowhite: 0xffdeadff,\r\n  navy: 0x000080ff,\r\n  oldlace: 0xfdf5e6ff,\r\n  olive: 0x808000ff,\r\n  olivedrab: 0x6b8e23ff,\r\n  orange: 0xffa500ff,\r\n  orangered: 0xff4500ff,\r\n  orchid: 0xda70d6ff,\r\n  palegoldenrod: 0xeee8aaff,\r\n  palegreen: 0x98fb98ff,\r\n  paleturquoise: 0xafeeeeff,\r\n  palevioletred: 0xdb7093ff,\r\n  papayawhip: 0xffefd5ff,\r\n  peachpuff: 0xffdab9ff,\r\n  peru: 0xcd853fff,\r\n  pink: 0xffc0cbff,\r\n  plum: 0xdda0ddff,\r\n  powderblue: 0xb0e0e6ff,\r\n  purple: 0x800080ff,\r\n  rebeccapurple: 0x663399ff,\r\n  red: 0xff0000ff,\r\n  rosybrown: 0xbc8f8fff,\r\n  royalblue: 0x4169e1ff,\r\n  saddlebrown: 0x8b4513ff,\r\n  salmon: 0xfa8072ff,\r\n  sandybrown: 0xf4a460ff,\r\n  seagreen: 0x2e8b57ff,\r\n  seashell: 0xfff5eeff,\r\n  sienna: 0xa0522dff,\r\n  silver: 0xc0c0c0ff,\r\n  skyblue: 0x87ceebff,\r\n  slateblue: 0x6a5acdff,\r\n  slategray: 0x708090ff,\r\n  slategrey: 0x708090ff,\r\n  snow: 0xfffafaff,\r\n  springgreen: 0x00ff7fff,\r\n  steelblue: 0x4682b4ff,\r\n  tan: 0xd2b48cff,\r\n  teal: 0x008080ff,\r\n  thistle: 0xd8bfd8ff,\r\n  tomato: 0xff6347ff,\r\n  turquoise: 0x40e0d0ff,\r\n  violet: 0xee82eeff,\r\n  wheat: 0xf5deb3ff,\r\n  white: 0xffffffff,\r\n  whitesmoke: 0xf5f5f5ff,\r\n  yellow: 0xffff00ff,\r\n  yellowgreen: 0x9acd32ff\r\n};\r\n\r\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\r\nconst PERCENTAGE = NUMBER + '%';\r\n\r\nfunction call(...parts) {\r\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\r\n}\r\n\r\nconst rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\r\nconst rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\r\nconst hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\r\nconst hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\r\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\r\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\r\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\r\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\r\n\r\nfunction normalizeColor(color) {\r\n  let match;\r\n\r\n  if (typeof color === 'number') {\r\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;\r\n  }\r\n\r\n  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;\r\n\r\n  if (colors$1 && colors$1[color] !== undefined) {\r\n    return colors$1[color];\r\n  }\r\n\r\n  if (match = rgb.exec(color)) {\r\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;\r\n  }\r\n\r\n  if (match = rgba.exec(color)) {\r\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\r\n  }\r\n\r\n  if (match = hex3.exec(color)) {\r\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;\r\n  }\r\n\r\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\r\n\r\n  if (match = hex4.exec(color)) {\r\n    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\r\n  }\r\n\r\n  if (match = hsl.exec(color)) {\r\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;\r\n  }\r\n\r\n  if (match = hsla.exec(color)) {\r\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction hue2rgb(p, q, t) {\r\n  if (t < 0) t += 1;\r\n  if (t > 1) t -= 1;\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n  if (t < 1 / 2) return q;\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n  return p;\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n  const p = 2 * l - q;\r\n  const r = hue2rgb(p, q, h + 1 / 3);\r\n  const g = hue2rgb(p, q, h);\r\n  const b = hue2rgb(p, q, h - 1 / 3);\r\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\r\n}\r\n\r\nfunction parse255(str) {\r\n  const int = parseInt(str, 10);\r\n  if (int < 0) return 0;\r\n  if (int > 255) return 255;\r\n  return int;\r\n}\r\n\r\nfunction parse360(str) {\r\n  const int = parseFloat(str);\r\n  return (int % 360 + 360) % 360 / 360;\r\n}\r\n\r\nfunction parse1(str) {\r\n  const num = parseFloat(str);\r\n  if (num < 0) return 0;\r\n  if (num > 1) return 255;\r\n  return Math.round(num * 255);\r\n}\r\n\r\nfunction parsePercentage(str) {\r\n  const int = parseFloat(str);\r\n  if (int < 0) return 0;\r\n  if (int > 100) return 1;\r\n  return int / 100;\r\n}\r\n\r\nfunction colorToRgba(input) {\r\n  let int32Color = normalizeColor(input);\r\n  if (int32Color === null) return input;\r\n  int32Color = int32Color || 0;\r\n  let r = (int32Color & 0xff000000) >>> 24;\r\n  let g = (int32Color & 0x00ff0000) >>> 16;\r\n  let b = (int32Color & 0x0000ff00) >>> 8;\r\n  let a = (int32Color & 0x000000ff) / 255;\r\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n}\r\n\r\nconst createInterpolator = (range, output, extrapolate) => {\r\n  if (is.fun(range)) {\r\n    return range;\r\n  }\r\n\r\n  if (is.arr(range)) {\r\n    return createInterpolator({\r\n      range,\r\n      output: output,\r\n      extrapolate\r\n    });\r\n  }\r\n\r\n  if (is.str(range.output[0])) {\r\n    return createStringInterpolator$1(range);\r\n  }\r\n\r\n  const config = range;\r\n  const outputRange = config.output;\r\n  const inputRange = config.range || [0, 1];\r\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';\r\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';\r\n\r\n  const easing = config.easing || (t => t);\r\n\r\n  return input => {\r\n    const range = findRange(input, inputRange);\r\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);\r\n  };\r\n};\r\n\r\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\r\n  let result = map ? map(input) : input;\r\n\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\r\n  }\r\n\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\r\n  }\r\n\r\n  if (outputMin === outputMax) return outputMin;\r\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax;\r\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin);\r\n  result = easing(result);\r\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\r\n  return result;\r\n}\r\n\r\nfunction findRange(input, inputRange) {\r\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\r\n\r\n  return i - 1;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nconst $get = Symbol.for('FluidValue.get');\r\nconst $observers = Symbol.for('FluidValue.observers');\r\n\r\nconst hasFluidValue = arg => Boolean(arg && arg[$get]);\r\n\r\nconst getFluidValue = arg => arg && arg[$get] ? arg[$get]() : arg;\r\n\r\nconst getFluidObservers = target => target[$observers] || null;\r\n\r\nfunction callFluidObserver(observer, event) {\r\n  if (observer.eventObserved) {\r\n    observer.eventObserved(event);\r\n  } else {\r\n    observer(event);\r\n  }\r\n}\r\n\r\nfunction callFluidObservers(target, event) {\r\n  let observers = target[$observers];\r\n\r\n  if (observers) {\r\n    observers.forEach(observer => {\r\n      callFluidObserver(observer, event);\r\n    });\r\n  }\r\n}\r\n\r\nclass FluidValue {\r\n  constructor(get) {\r\n    this[$get] = void 0;\r\n    this[$observers] = void 0;\r\n\r\n    if (!get && !(get = this.get)) {\r\n      throw Error('Unknown getter');\r\n    }\r\n\r\n    setFluidGetter(this, get);\r\n  }\r\n\r\n}\r\n\r\nconst setFluidGetter = (target, get) => setHidden(target, $get, get);\r\n\r\nfunction addFluidObserver(target, observer) {\r\n  if (target[$get]) {\r\n    let observers = target[$observers];\r\n\r\n    if (!observers) {\r\n      setHidden(target, $observers, observers = new Set());\r\n    }\r\n\r\n    if (!observers.has(observer)) {\r\n      observers.add(observer);\r\n\r\n      if (target.observerAdded) {\r\n        target.observerAdded(observers.size, observer);\r\n      }\r\n    }\r\n  }\r\n\r\n  return observer;\r\n}\r\n\r\nfunction removeFluidObserver(target, observer) {\r\n  let observers = target[$observers];\r\n\r\n  if (observers && observers.has(observer)) {\r\n    const count = observers.size - 1;\r\n\r\n    if (count) {\r\n      observers.delete(observer);\r\n    } else {\r\n      target[$observers] = null;\r\n    }\r\n\r\n    if (target.observerRemoved) {\r\n      target.observerRemoved(count, observer);\r\n    }\r\n  }\r\n}\r\n\r\nconst setHidden = (target, key, value) => Object.defineProperty(target, key, {\r\n  value,\r\n  writable: true,\r\n  configurable: true\r\n});\r\n\r\nconst numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\r\nconst unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, 'i');\r\nconst rgbaRegex = /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi;\r\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\n\r\nconst variableToRgba = input => {\r\n  const [token, fallback] = parseCSSVariable(input);\r\n\r\n  if (!token || isSSR()) {\r\n    return input;\r\n  }\r\n\r\n  const value = window.getComputedStyle(document.documentElement).getPropertyValue(token);\r\n\r\n  if (value) {\r\n    return value.trim();\r\n  } else if (fallback && fallback.startsWith('--')) {\r\n    const _value = window.getComputedStyle(document.documentElement).getPropertyValue(fallback);\r\n\r\n    if (_value) {\r\n      return _value;\r\n    } else {\r\n      return input;\r\n    }\r\n  } else if (fallback && cssVariableRegex.test(fallback)) {\r\n    return variableToRgba(fallback);\r\n  } else if (fallback) {\r\n    return fallback;\r\n  }\r\n\r\n  return input;\r\n};\r\n\r\nconst parseCSSVariable = current => {\r\n  const match = cssVariableRegex.exec(current);\r\n  if (!match) return [,];\r\n  const [, token, fallback] = match;\r\n  return [token, fallback];\r\n};\r\n\r\nlet namedColorRegex;\r\n\r\nconst rgbaRound = (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;\r\n\r\nconst createStringInterpolator = config => {\r\n  if (!namedColorRegex) namedColorRegex = colors$1 ? new RegExp(`(${Object.keys(colors$1).join('|')})(?!\\\\w)`, 'g') : /^\\b$/;\r\n  const output = config.output.map(value => {\r\n    return getFluidValue(value).replace(cssVariableRegex, variableToRgba).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba);\r\n  });\r\n  const keyframes = output.map(value => value.match(numberRegex).map(Number));\r\n  const outputRanges = keyframes[0].map((_, i) => keyframes.map(values => {\r\n    if (!(i in values)) {\r\n      throw Error('The arity of each \"output\" value must be equal');\r\n    }\r\n\r\n    return values[i];\r\n  }));\r\n  const interpolators = outputRanges.map(output => createInterpolator(_extends({}, config, {\r\n    output\r\n  })));\r\n  return input => {\r\n    var _output$find;\r\n\r\n    const missingUnit = !unitRegex.test(output[0]) && ((_output$find = output.find(value => unitRegex.test(value))) == null ? void 0 : _output$find.replace(numberRegex, ''));\r\n    let i = 0;\r\n    return output[0].replace(numberRegex, () => `${interpolators[i++](input)}${missingUnit || ''}`).replace(rgbaRegex, rgbaRound);\r\n  };\r\n};\r\n\r\nconst prefix = 'react-spring: ';\r\n\r\nconst once = fn => {\r\n  const func = fn;\r\n  let called = false;\r\n\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(`${prefix}once requires a function parameter`);\r\n  }\r\n\r\n  return (...args) => {\r\n    if (!called) {\r\n      func(...args);\r\n      called = true;\r\n    }\r\n  };\r\n};\r\n\r\nconst warnInterpolate = once(console.warn);\r\nfunction deprecateInterpolate() {\r\n  warnInterpolate(`${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`);\r\n}\r\nconst warnDirectCall = once(console.warn);\r\nfunction deprecateDirectCall() {\r\n  warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`);\r\n}\r\n\r\nfunction isAnimatedString(value) {\r\n  return is.str(value) && (value[0] == '#' || /\\d/.test(value) || !isSSR() && cssVariableRegex.test(value) || value in (colors$1 || {}));\r\n}\r\n\r\nconst useOnce = effect => useEffect(effect, emptyDeps);\r\nconst emptyDeps = [];\r\n\r\nfunction useForceUpdate() {\r\n  const update = useState()[1];\r\n  const mounted = useState(makeMountedRef)[0];\r\n  useOnce(mounted.unmount);\r\n  return () => {\r\n    if (mounted.current) {\r\n      update({});\r\n    }\r\n  };\r\n}\r\n\r\nfunction makeMountedRef() {\r\n  const mounted = {\r\n    current: true,\r\n    unmount: () => () => {\r\n      mounted.current = false;\r\n    }\r\n  };\r\n  return mounted;\r\n}\r\n\r\nfunction useMemoOne(getResult, inputs) {\r\n  const [initial] = useState(() => ({\r\n    inputs,\r\n    result: getResult()\r\n  }));\r\n  const committed = useRef();\r\n  const prevCache = committed.current;\r\n  let cache = prevCache;\r\n\r\n  if (cache) {\r\n    const useCache = Boolean(inputs && cache.inputs && areInputsEqual(inputs, cache.inputs));\r\n\r\n    if (!useCache) {\r\n      cache = {\r\n        inputs,\r\n        result: getResult()\r\n      };\r\n    }\r\n  } else {\r\n    cache = initial;\r\n  }\r\n\r\n  useEffect(() => {\r\n    committed.current = cache;\r\n\r\n    if (prevCache == initial) {\r\n      initial.inputs = initial.result = undefined;\r\n    }\r\n  }, [cache]);\r\n  return cache.result;\r\n}\r\n\r\nfunction areInputsEqual(next, prev) {\r\n  if (next.length !== prev.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < next.length; i++) {\r\n    if (next[i] !== prev[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction usePrev(value) {\r\n  const prevRef = useRef();\r\n  useEffect(() => {\r\n    prevRef.current = value;\r\n  });\r\n  return prevRef.current;\r\n}\r\n\r\nconst useLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;\r\n\r\nexport { FluidValue, globals as Globals, addFluidObserver, callFluidObserver, callFluidObservers, colorToRgba, colors, createInterpolator, createStringInterpolator, defineHidden, deprecateDirectCall, deprecateInterpolate, each, eachProp, flush, flushCalls, frameLoop, getFluidObservers, getFluidValue, hasFluidValue, hex3, hex4, hex6, hex8, hsl, hsla, is, isAnimatedString, isEqual, isSSR, noop, removeFluidObserver, rgb, rgba, setFluidGetter, toArray, useForceUpdate, useLayoutEffect, useMemoOne, useOnce, usePrev };\r\n","","","import { Globals } from '@react-spring/core';\r\nexport * from '@react-spring/core';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\nimport { eachProp, is, toArray, FluidValue, each, getFluidValue, hasFluidValue, addFluidObserver, removeFluidObserver, callFluidObservers, createStringInterpolator, colors } from '@react-spring/shared';\r\nimport { AnimatedObject, createHost } from '@react-spring/animated';\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nconst _excluded$2 = [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"];\r\nconst isCustomPropRE = /^--/;\r\n\r\nfunction dangerousStyleValue(name, value) {\r\n  if (value == null || typeof value === 'boolean' || value === '') return '';\r\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px';\r\n  return ('' + value).trim();\r\n}\r\n\r\nconst attributeCache = {};\r\nfunction applyAnimatedValues(instance, props) {\r\n  if (!instance.nodeType || !instance.setAttribute) {\r\n    return false;\r\n  }\r\n\r\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\r\n\r\n  const _ref = props,\r\n        {\r\n    style,\r\n    children,\r\n    scrollTop,\r\n    scrollLeft\r\n  } = _ref,\r\n        attributes = _objectWithoutPropertiesLoose(_ref, _excluded$2);\r\n\r\n  const values = Object.values(attributes);\r\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => '-' + n.toLowerCase())));\r\n\r\n  if (children !== void 0) {\r\n    instance.textContent = children;\r\n  }\r\n\r\n  for (let name in style) {\r\n    if (style.hasOwnProperty(name)) {\r\n      const value = dangerousStyleValue(name, style[name]);\r\n\r\n      if (isCustomPropRE.test(name)) {\r\n        instance.style.setProperty(name, value);\r\n      } else {\r\n        instance.style[name] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  names.forEach((name, i) => {\r\n    instance.setAttribute(name, values[i]);\r\n  });\r\n\r\n  if (scrollTop !== void 0) {\r\n    instance.scrollTop = scrollTop;\r\n  }\r\n\r\n  if (scrollLeft !== void 0) {\r\n    instance.scrollLeft = scrollLeft;\r\n  }\r\n}\r\nlet isUnitlessNumber = {\r\n  animationIterationCount: true,\r\n  borderImageOutset: true,\r\n  borderImageSlice: true,\r\n  borderImageWidth: true,\r\n  boxFlex: true,\r\n  boxFlexGroup: true,\r\n  boxOrdinalGroup: true,\r\n  columnCount: true,\r\n  columns: true,\r\n  flex: true,\r\n  flexGrow: true,\r\n  flexPositive: true,\r\n  flexShrink: true,\r\n  flexNegative: true,\r\n  flexOrder: true,\r\n  gridRow: true,\r\n  gridRowEnd: true,\r\n  gridRowSpan: true,\r\n  gridRowStart: true,\r\n  gridColumn: true,\r\n  gridColumnEnd: true,\r\n  gridColumnSpan: true,\r\n  gridColumnStart: true,\r\n  fontWeight: true,\r\n  lineClamp: true,\r\n  lineHeight: true,\r\n  opacity: true,\r\n  order: true,\r\n  orphans: true,\r\n  tabSize: true,\r\n  widows: true,\r\n  zIndex: true,\r\n  zoom: true,\r\n  fillOpacity: true,\r\n  floodOpacity: true,\r\n  stopOpacity: true,\r\n  strokeDasharray: true,\r\n  strokeDashoffset: true,\r\n  strokeMiterlimit: true,\r\n  strokeOpacity: true,\r\n  strokeWidth: true\r\n};\r\n\r\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\r\n\r\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\r\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\r\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\r\n  return acc;\r\n}, isUnitlessNumber);\r\n\r\nconst _excluded$1 = [\"x\", \"y\", \"z\"];\r\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/;\r\nconst pxTransforms = /^(translate)/;\r\nconst degTransforms = /^(rotate|skew)/;\r\n\r\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\r\n\r\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\r\n\r\nclass AnimatedStyle extends AnimatedObject {\r\n  constructor(_ref) {\r\n    let {\r\n      x,\r\n      y,\r\n      z\r\n    } = _ref,\r\n        style = _objectWithoutPropertiesLoose(_ref, _excluded$1);\r\n\r\n    const inputs = [];\r\n    const transforms = [];\r\n\r\n    if (x || y || z) {\r\n      inputs.push([x || 0, y || 0, z || 0]);\r\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, isValueIdentity(xyz, 0)]);\r\n    }\r\n\r\n    eachProp(style, (value, key) => {\r\n      if (key === 'transform') {\r\n        inputs.push([value || '']);\r\n        transforms.push(transform => [transform, transform === '']);\r\n      } else if (domTransforms.test(key)) {\r\n        delete style[key];\r\n        if (is.und(value)) return;\r\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\r\n        inputs.push(toArray(value));\r\n        transforms.push(key === 'rotate3d' ? ([x, y, z, deg]) => [`rotate3d(${x},${y},${z},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)] : input => [`${key}(${input.map(v => addUnit(v, unit)).join(',')})`, isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\r\n      }\r\n    });\r\n\r\n    if (inputs.length) {\r\n      style.transform = new FluidTransform(inputs, transforms);\r\n    }\r\n\r\n    super(style);\r\n  }\r\n\r\n}\r\n\r\nclass FluidTransform extends FluidValue {\r\n  constructor(inputs, transforms) {\r\n    super();\r\n    this._value = null;\r\n    this.inputs = inputs;\r\n    this.transforms = transforms;\r\n  }\r\n\r\n  get() {\r\n    return this._value || (this._value = this._get());\r\n  }\r\n\r\n  _get() {\r\n    let transform = '';\r\n    let identity = true;\r\n    each(this.inputs, (input, i) => {\r\n      const arg1 = getFluidValue(input[0]);\r\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\r\n      transform += ' ' + t;\r\n      identity = identity && id;\r\n    });\r\n    return identity ? 'none' : transform;\r\n  }\r\n\r\n  observerAdded(count) {\r\n    if (count == 1) each(this.inputs, input => each(input, value => hasFluidValue(value) && addFluidObserver(value, this)));\r\n  }\r\n\r\n  observerRemoved(count) {\r\n    if (count == 0) each(this.inputs, input => each(input, value => hasFluidValue(value) && removeFluidObserver(value, this)));\r\n  }\r\n\r\n  eventObserved(event) {\r\n    if (event.type == 'change') {\r\n      this._value = null;\r\n    }\r\n\r\n    callFluidObservers(this, event);\r\n  }\r\n\r\n}\r\n\r\nconst primitives = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\r\n\r\nconst _excluded = [\"scrollTop\", \"scrollLeft\"];\r\nGlobals.assign({\r\n  batchedUpdates: unstable_batchedUpdates,\r\n  createStringInterpolator,\r\n  colors\r\n});\r\nconst host = createHost(primitives, {\r\n  applyAnimatedValues,\r\n  createAnimatedStyle: style => new AnimatedStyle(style),\r\n  getComponentProps: _ref => {\r\n    let props = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n\r\n    return props;\r\n  }\r\n});\r\nconst animated = host.animated;\r\n\r\nexport { animated as a, animated };\r\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`About`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Contact`}</h2>\n    <p>{`Contact`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Carlos Alejandro Diaz Perez`}</h1>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ProjectCard = makeShortcode(\"ProjectCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Projects`}</h2>\n    <ProjectCard mdxType=\"ProjectCard\">\n \n    </ProjectCard>\n    <ProjectCard mdxType=\"ProjectCard\">\n  \n    </ProjectCard>\n    <ProjectCard mdxType=\"ProjectCard\">\n  \n    </ProjectCard>\n    <ProjectCard mdxType=\"ProjectCard\">\n  \n    </ProjectCard>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\r\nimport Divider from \"../elements/divider\"\r\nimport Inner from \"../elements/inner\"\r\nimport Content from \"../elements/content\"\r\nimport Svg from \"./svg\"\r\nimport { UpDown, UpDownWide } from \"../styles/animations\"\r\n// @ts-ignore\r\nimport AboutMDX from \"../sections/about\"\r\n\r\nconst About = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\r\n  <div>\r\n    <Divider\r\n      bg=\"divider\"\r\n      clipPath=\"polygon(0 16%, 100% 4%, 100% 82%, 0 94%)\"\r\n      speed={0.2}\r\n      offset={offset}\r\n      factor={factor}\r\n    />\r\n    <Divider speed={0.1} offset={offset} factor={factor}>\r\n      <UpDown>\r\n        <Svg icon=\"box\" hiddenMobile width={6} color=\"icon_blue\" left=\"50%\" top=\"75%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"70%\" top=\"20%\" />\r\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_darkest\" left=\"25%\" top=\"5%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_orange\" left=\"80%\" top=\"80%\" />\r\n      </UpDown>\r\n      <UpDownWide>\r\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_purple\" left=\"5%\" top=\"80%\" />\r\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"95%\" top=\"50%\" />\r\n        <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"85%\" top=\"15%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\r\n      </UpDownWide>\r\n      <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\r\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"70%\" top=\"60%\" />\r\n      <Svg icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\r\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"20%\" top=\"30%\" />\r\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darkest\" left=\"80%\" top=\"70%\" />\r\n    </Divider>\r\n    <Content speed={0.4} offset={offset} factor={factor}>\r\n      <Inner>\r\n        <AboutMDX />\r\n      </Inner>\r\n    </Content>\r\n  </div>\r\n)\r\n\r\nexport default About\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Divider from \"../elements/divider\"\r\nimport Inner from \"../elements/inner\"\r\nimport Content from \"../elements/content\"\r\nimport Svg from \"./svg\"\r\nimport { UpDown, UpDownWide, waveAnimation } from \"../styles/animations\"\r\nimport Footer from \"./footer\"\r\n// @ts-ignore\r\nimport ContactMDX from \"../sections/contact\"\r\n\r\nconst Contact = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\r\n  <div>\r\n    <Divider fill=\"divider\" speed={0.2} offset={offset} factor={factor}>\r\n      <div sx={{ position: `absolute`, bottom: 0, width: `full`, transform: `matrix(1, 0, 0, -1, 0, 0)` }}>\r\n        <div\r\n          sx={{\r\n            position: `relative`,\r\n            height: `full`,\r\n            svg: { width: `100%`, height: `40vh` },\r\n            path: { animation: waveAnimation(`20s`) },\r\n          }}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"contact-wave\" viewBox=\"0 0 800 338.05\" preserveAspectRatio=\"none\">\r\n            <path>\r\n              <animate\r\n                attributeName=\"d\"\r\n                values=\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z;M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\"\r\n                repeatCount=\"indefinite\"\r\n                dur=\"30s\"\r\n              />\r\n            </path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </Divider>\r\n    <Content speed={0.4} offset={offset} factor={factor}>\r\n      <Inner>\r\n        <ContactMDX />\r\n      </Inner>\r\n      <Footer />\r\n    </Content>\r\n    <Divider speed={0.1} offset={offset} factor={factor}>\r\n      <UpDown>\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"70%\" top=\"20%\" />\r\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_darkest\" left=\"25%\" top=\"5%\" />\r\n      </UpDown>\r\n      <UpDownWide>\r\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"95%\" top=\"50%\" />\r\n        <Svg icon=\"circle\" width={6} color=\"icon_brightest\" left=\"85%\" top=\"15%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\r\n      </UpDownWide>\r\n      <Svg icon=\"circle\" width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\r\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"70%\" top=\"60%\" />\r\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"20%\" top=\"30%\" />\r\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darkest\" left=\"80%\" top=\"70%\" />\r\n    </Divider>\r\n  </div>\r\n)\r\n\r\nexport default Contact\r\n","/** @jsx jsx */\r\nimport { Box, Flex, Link, useColorMode, jsx } from \"theme-ui\"\r\n\r\nconst Footer = () => {\r\n  const [colorMode, setColorMode] = useColorMode()\r\n  const isDark = colorMode === `dark`\r\n  const toggleColorMode = (e: any) => {\r\n    setColorMode(isDark ? `light` : `dark`)\r\n  }\r\n\r\n  return (\r\n    <Box as=\"footer\" variant=\"footer\">\r\n      <button\r\n        sx={{ variant: `buttons.toggle`, fontWeight: `semibold`, display: `block`, mx: `auto`, mb: 3 }}\r\n        onClick={toggleColorMode}\r\n        type=\"button\"\r\n        aria-label=\"Toggle dark mode\"\r\n      >\r\n        {isDark ? `Light` : `Dark`}\r\n      </button>\r\n      Copyright &copy; {new Date().getFullYear()}. All rights reserved.\r\n      <br />\r\n      <Flex\r\n        sx={{\r\n          justifyContent: `center`,\r\n          alignItems: `center`,\r\n          mt: 3,\r\n          color: `text`,\r\n          fontWeight: `semibold`,\r\n          a: { color: `text` },\r\n        }}\r\n      >\r\n        {isDark ? (\r\n          <img width=\"30\" height=\"30\" src=\"https://img.lekoarts.de/gatsby/logo_v2-light_w30.png\" alt=\"LekoArts Logo\" />\r\n        ) : (\r\n          <img width=\"30\" height=\"30\" src=\"https://img.lekoarts.de/gatsby/logo_v2_w30.png\" alt=\"LekoArts Logo\" />\r\n        )}\r\n        {` `}\r\n        <Link\r\n          aria-label=\"Link to the theme's GitHub repository\"\r\n          sx={{ ml: 2 }}\r\n          href=\"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-cara\"\r\n        >\r\n          Theme\r\n        </Link>\r\n        <div sx={{ mx: 1 }}>by</div>\r\n        {` `}\r\n        <Link\r\n          aria-label=\"Link to the theme author's website\"\r\n          href=\"https://www.lekoarts.de?utm_source=cara&utm_medium=Theme\"\r\n        >\r\n          LekoArts\r\n        </Link>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Divider from \"../elements/divider\"\r\nimport Inner from \"../elements/inner\"\r\nimport Content from \"../elements/content\"\r\nimport Svg from \"./svg\"\r\nimport { UpDown, UpDownWide } from \"../styles/animations\"\r\n// @ts-ignore\r\nimport Intro from \"../sections/intro\"\r\n\r\nconst Hero = ({ offset, factor = 1 }: { offset: number; factor?: number }) => (\r\n  <div>\r\n    <Divider speed={0.2} offset={offset} factor={factor}>\r\n      <UpDown>\r\n        <Svg icon=\"triangle\" hiddenMobile width={48} stroke color=\"icon_orange\" left=\"10%\" top=\"20%\" />\r\n        <Svg icon=\"hexa\" width={48} stroke color=\"icon_red\" left=\"60%\" top=\"70%\" />\r\n        <Svg icon=\"box\" width={6} color=\"icon_darker\" left=\"60%\" top=\"15%\" />\r\n      </UpDown>\r\n      <UpDownWide>\r\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_blue\" left=\"80%\" top=\"10%\" />\r\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\r\n        <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\r\n        <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\r\n        <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\r\n        <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\r\n      </UpDownWide>\r\n      <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_darker\" left=\"5%\" top=\"70%\" />\r\n      <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\r\n      <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"50%\" top=\"60%\" />\r\n      <Svg icon=\"upDown\" width={8} color=\"icon_darkest\" left=\"95%\" top=\"90%\" />\r\n      <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_darker\" left=\"40%\" top=\"80%\" />\r\n      <Svg icon=\"triangle\" width={8} stroke color=\"icon_darker\" left=\"25%\" top=\"5%\" />\r\n      <Svg icon=\"circle\" width={64} color=\"icon_green\" left=\"95%\" top=\"5%\" />\r\n      <Svg icon=\"box\" hiddenMobile width={64} color=\"icon_purple\" left=\"5%\" top=\"90%\" />\r\n      <Svg icon=\"box\" width={6} color=\"icon_darkest\" left=\"10%\" top=\"10%\" />\r\n      <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"40%\" top=\"30%\" />\r\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_darker\" left=\"10%\" top=\"50%\" />\r\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_darker\" left=\"80%\" top=\"70%\" />\r\n    </Divider>\r\n    <Content sx={{ variant: `texts.bigger` }} speed={0.4} offset={offset} factor={factor}>\r\n      <Inner>\r\n        <Intro />\r\n      </Inner>\r\n    </Content>\r\n  </div>\r\n)\r\n\r\nexport default Hero\r\n","import * as React from \"react\"\r\nimport { get } from \"theme-ui\"\r\nimport { Global } from \"@emotion/react\"\r\nimport SEO from \"./seo\"\r\n\r\ntype LayoutProps = { children: React.ReactNode; className?: string }\r\n\r\nconst Layout = ({ children, className = `` }: LayoutProps) => (\r\n  <React.Fragment>\r\n    <Global\r\n      styles={(t) => ({\r\n        \"*\": {\r\n          boxSizing: `inherit`,\r\n          \"&:before\": {\r\n            boxSizing: `inherit`,\r\n          },\r\n          \"&:after\": {\r\n            boxSizing: `inherit`,\r\n          },\r\n        },\r\n        html: {\r\n          fontSize: `18px`,\r\n          WebkitTextSizeAdjust: `100%`,\r\n        },\r\n        img: {\r\n          borderStyle: `none`,\r\n        },\r\n        pre: {\r\n          fontFamily: `monospace`,\r\n          fontSize: `1em`,\r\n        },\r\n        \"[hidden]\": {\r\n          display: `none`,\r\n        },\r\n        \"::selection\": {\r\n          backgroundColor: get(t, `colors.primary`),\r\n          color: get(t, `colors.background`),\r\n        },\r\n      })}\r\n    />\r\n    <SEO />\r\n    <main className={className}>{children}</main>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default Layout\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport Divider from \"../elements/divider\"\r\nimport Inner from \"../elements/inner\"\r\nimport Content from \"../elements/content\"\r\nimport Svg from \"./svg\"\r\nimport { UpDown, UpDownWide } from \"../styles/animations\"\r\n// @ts-ignore\r\nimport ProjectsMDX from \"../sections/projects\"\r\n\r\nconst Projects = ({ offset, factor = 2 }: { offset: number; factor?: number }) => (\r\n  <div>\r\n    <Divider\r\n      bg=\"linear-gradient(to right, SlateBlue 0%, DeepSkyBlue 100%)\"\r\n      sx={{ clipPath: `polygon(0 15%, 100% 25%, 100% 85%, 0 75%)` }}\r\n      speed={-0.2}\r\n      offset={1.1}\r\n      factor={factor}\r\n    />\r\n    <Content speed={0.4} offset={offset + 0.2} factor={factor}>\r\n      <Inner>\r\n        <div\r\n          sx={{\r\n            display: `grid`,\r\n            gridGap: [4, 4, 4, 5],\r\n            gridTemplateColumns: [`1fr`, `1fr`, `repeat(2, 1fr)`],\r\n            h2: { gridColumn: `-1/1`, color: `white !important` },\r\n          }}\r\n        >\r\n          <ProjectsMDX />\r\n        </div>\r\n      </Inner>\r\n    </Content>\r\n    <Divider speed={0.1} offset={offset} factor={factor}>\r\n      <UpDown>\r\n        <Svg icon=\"box\" width={6} color=\"icon_brightest\" left=\"85%\" top=\"75%\" />\r\n        <Svg icon=\"upDown\" width={8} color=\"icon_teal\" left=\"70%\" top=\"20%\" />\r\n        <Svg icon=\"triangle\" width={8} stroke color=\"icon_orange\" left=\"25%\" top=\"5%\" />\r\n        <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_brightest\" left=\"17%\" top=\"60%\" />\r\n      </UpDown>\r\n      <UpDownWide>\r\n        <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_green\" left=\"20%\" top=\"90%\" />\r\n        <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"30%\" />\r\n        <Svg icon=\"circle\" width={16} color=\"icon_yellow\" left=\"70%\" top=\"90%\" />\r\n        <Svg icon=\"triangle\" hiddenMobile width={16} stroke color=\"icon_teal\" left=\"18%\" top=\"75%\" />\r\n        <Svg icon=\"circle\" width={6} color=\"icon_brightest\" left=\"75%\" top=\"10%\" />\r\n        <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_green\" left=\"45%\" top=\"10%\" />\r\n      </UpDownWide>\r\n      <Svg icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\r\n      <Svg icon=\"circle\" width={12} color=\"icon_pink\" left=\"80%\" top=\"60%\" />\r\n      <Svg icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\r\n      <Svg icon=\"box\" width={12} color=\"icon_yellow\" left=\"29%\" top=\"26%\" />\r\n      <Svg icon=\"hexa\" width={16} stroke color=\"icon_red\" left=\"75%\" top=\"30%\" />\r\n      <Svg icon=\"hexa\" width={8} stroke color=\"icon_yellow\" left=\"80%\" top=\"70%\" />\r\n    </Divider>\r\n  </div>\r\n)\r\n\r\nexport default Projects\r\n","import * as React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { withPrefix } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\n\r\ntype Props = {\r\n  title?: string\r\n  description?: string\r\n  pathname?: string\r\n  image?: string\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst SEO = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\r\n  const site = useSiteMetadata()\r\n\r\n  const {\r\n    siteTitle,\r\n    siteTitleAlt: defaultTitle,\r\n    siteUrl,\r\n    siteDescription: defaultDescription,\r\n    siteLanguage,\r\n    siteImage: defaultImage,\r\n    author,\r\n  } = site\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    image: `${siteUrl}${image || defaultImage}`,\r\n  }\r\n  return (\r\n    <Helmet title={title} defaultTitle={defaultTitle} titleTemplate={`%s | ${siteTitle}`}>\r\n      <html lang={siteLanguage} />\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta property=\"og:title\" content={seo.title} />\r\n      <meta property=\"og:url\" content={seo.url} />\r\n      <meta property=\"og:description\" content={seo.description} />\r\n      <meta property=\"og:image\" content={seo.image} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:image:alt\" content={seo.description} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:image:alt\" content={seo.description} />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-cara\" />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\r\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\r\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\r\n      {children}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default SEO\r\n","/** @jsx jsx */\r\nimport * as React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\nimport { hidden } from \"../styles/utils\"\r\n\r\nconst icons = {\r\n  triangle: {\r\n    shape: (\r\n      <polygon\r\n        strokeWidth=\"1px\"\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"10\"\r\n        points=\"14.921,2.27 28.667,25.5 1.175,25.5 \"\r\n      />\r\n    ),\r\n    viewBox: `0 0 30 30`,\r\n  },\r\n  circle: {\r\n    shape: (\r\n      <path d=\"M15,30A15,15,0,1,1,30,15,15,15,0,0,1,15,30ZM15,6.23A8.77,8.77,0,1,0,23.77,15,8.77,8.77,0,0,0,15,6.23Z\" />\r\n    ),\r\n    viewBox: `0 0 30 30`,\r\n  },\r\n  arrowUp: {\r\n    shape: (\r\n      <React.Fragment>\r\n        <path d=\"M28.74,20.81H1.26a1.26,1.26,0,0,1-1-2L14.16.5a1.25,1.25,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,18.8a1.25,1.25,0,0,1-1,2ZM3.81,18.29H26.22L15.16,3.37Z\" />\r\n        {` `}\r\n        <path d=\"M28.74,42H1.26a1.28,1.28,0,0,1-1.13-.71A1.26,1.26,0,0,1,.26,40l13.9-18.29a1.28,1.28,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,40a1.26,1.26,0,0,1,.12,1.32A1.28,1.28,0,0,1,28.74,42ZM3.81,39.47H26.22L15.16,24.55Z\" />\r\n      </React.Fragment>\r\n    ),\r\n    viewBox: `0 0 30 42`,\r\n  },\r\n  upDown: {\r\n    shape: (\r\n      <React.Fragment>\r\n        <path d=\"M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z\" />\r\n        <path d=\"M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z\" />\r\n      </React.Fragment>\r\n    ),\r\n    viewBox: `0 0 30 44.58`,\r\n  },\r\n  box: {\r\n    shape: (\r\n      <path d=\"M28,2V28H2V2H28m.13-2H1.88A1.88,1.88,0,0,0,0,1.88V28.13A1.88,1.88,0,0,0,1.88,30H28.13A1.87,1.87,0,0,0,30,28.13V1.88A1.88,1.88,0,0,0,28.13,0Z\" />\r\n    ),\r\n    viewBox: `0 0 30 30`,\r\n  },\r\n  hexa: {\r\n    shape: (\r\n      <polygon\r\n        strokeLinejoin=\"round\"\r\n        strokeMiterlimit=\"10\"\r\n        points=\"27.5,21.904 15,28.809  2.5,21.904 2.5,8.095 15,1.19 27.5,8.095 \"\r\n      />\r\n    ),\r\n    viewBox: `0 0 30 30`,\r\n  },\r\n  cross: {\r\n    shape: (\r\n      <path\r\n        strokeWidth=\"3px\"\r\n        d=\"M60.5,50l34.8-34.8c2.9-2.9,2.9-7.6,0-10.5c-2.9-2.9-7.6-2.9-10.5,0L50,39.5L15.2,4.7c-2.9-2.9-7.6-2.9-10.5,0    c-2.9,2.9-2.9,7.6,0,10.5L39.5,50L4.7,84.8c-2.9,2.9-2.9,7.6,0,10.5c1.4,1.4,3.3,2.2,5.2,2.2s3.8-0.7,5.2-2.2L50,60.5l34.8,34.8    c1.4,1.4,3.3,2.2,5.2,2.2c1.9,0,3.8-0.7,5.2-2.2c2.9-2.9,2.9-7.6,0-10.5L60.5,50z\"\r\n      />\r\n    ),\r\n    viewBox: `0 0 100 100`,\r\n  },\r\n}\r\n\r\ntype IconType = \"triangle\" | \"circle\" | \"arrowUp\" | \"upDown\" | \"box\" | \"hexa\" | \"cross\"\r\n\r\ntype SVGProps = {\r\n  stroke?: boolean\r\n  color?: string | number | any\r\n  width: number\r\n  icon: IconType\r\n  left: string\r\n  top: string\r\n  hiddenMobile?: boolean\r\n}\r\n\r\nconst Svg = ({ stroke = false, color = ``, width, icon, left, top, hiddenMobile = false }: SVGProps) => (\r\n  <svg\r\n    sx={{\r\n      position: `absolute`,\r\n      stroke: stroke ? `currentColor` : `none`,\r\n      fill: stroke ? `none` : `currentColor`,\r\n      display: hiddenMobile ? hidden : `block`,\r\n      color,\r\n      width,\r\n      left,\r\n      top,\r\n    }}\r\n    viewBox={icons[icon].viewBox}\r\n  >\r\n    {icons[icon].shape}\r\n  </svg>\r\n)\r\n\r\nexport default Svg\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { ParallaxLayer } from \"@react-spring/parallax\"\r\n\r\ntype ContentProps = {\r\n  speed: number\r\n  offset: number\r\n  children: React.ReactNode\r\n  className?: string\r\n  factor?: number\r\n}\r\n\r\nconst Content = ({ speed, offset, children, className = ``, factor = 1 }: ContentProps) => (\r\n  <ParallaxLayer\r\n    sx={{\r\n      padding: [3, 4, 4, 5],\r\n      display: `flex`,\r\n      flexDirection: `column`,\r\n      alignItems: `center`,\r\n      justifyContent: `center`,\r\n      zIndex: 50,\r\n    }}\r\n    speed={speed}\r\n    offset={offset}\r\n    factor={factor}\r\n    className={className}\r\n  >\r\n    {children}\r\n  </ParallaxLayer>\r\n)\r\n\r\nexport default Content\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { ParallaxLayer } from \"@react-spring/parallax\"\r\n\r\ntype DividerProps = {\r\n  speed: number\r\n  offset: number\r\n  children?: React.ReactNode\r\n  bg?: string\r\n  fill?: string\r\n  clipPath?: string\r\n  className?: string\r\n  factor?: number\r\n}\r\n\r\nconst Divider = ({\r\n  speed,\r\n  offset,\r\n  factor = 1,\r\n  bg = ``,\r\n  fill = ``,\r\n  clipPath = ``,\r\n  children = null,\r\n  className = ``,\r\n}: DividerProps) => (\r\n  <ParallaxLayer\r\n    sx={{\r\n      position: `absolute`,\r\n      width: `full`,\r\n      height: `full`,\r\n      background: bg,\r\n      backgroundColor: bg,\r\n      \"#contact-wave\": {\r\n        color: fill,\r\n        fill: `currentColor`,\r\n      },\r\n      clipPath,\r\n    }}\r\n    speed={speed}\r\n    offset={offset}\r\n    factor={factor}\r\n    className={className}\r\n  >\r\n    {children}\r\n  </ParallaxLayer>\r\n)\r\n\r\nexport default Divider\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype InnerProps = {\r\n  className?: string\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Inner = ({ className = ``, children }: InnerProps) => (\r\n  <div sx={{ width: [`full`, `full`, `full`, `full`, `full`, `2/3`], textAlign: `left` }} className={className}>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default Inner\r\n","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\ntype UseSiteMetadataProps = {\r\n  site: {\r\n    siteMetadata: {\r\n      siteTitle: string\r\n      siteTitleAlt: string\r\n      siteHeadline: string\r\n      siteUrl: string\r\n      siteDescription: string\r\n      siteLanguage: string\r\n      siteImage: string\r\n      author: string\r\n      [key: string]: unknown\r\n    }\r\n  }\r\n}\r\n\r\nconst useSiteMetadata = () => {\r\n  const data = useStaticQuery<UseSiteMetadataProps>(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          siteTitle\r\n          siteTitleAlt\r\n          siteHeadline\r\n          siteUrl\r\n          siteDescription\r\n          siteLanguage\r\n          siteImage\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}\r\n\r\nexport default useSiteMetadata\r\n","/** @jsx jsx */\r\nimport * as React from \"react\"\r\nimport { keyframes, css, jsx } from \"@emotion/react\"\r\n\r\nconst wave = keyframes`\r\n  0% {\r\n    d: path(\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z\");\r\n  }\r\n  50% {\r\n    d: path(\"M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z\");\r\n  }\r\n  100% {\r\n    d: path(\"M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\");\r\n  }\r\n`\r\n\r\nconst upDown = keyframes`\r\n  from {\r\n    transform: translateY(0);\r\n  }\r\n  to {\r\n    transform: translateY(30px);\r\n  }\r\n`\r\n\r\nconst upDownWide = keyframes`\r\n  from {\r\n    transform: translateY(0);\r\n  }\r\n  to {\r\n    transform: translateY(200px);\r\n  }\r\n`\r\n\r\nconst upDownAnimation = css`\r\n  ${upDown} 4s ease-in-out infinite alternate;\r\n`\r\n\r\nconst upDownWideAnimation = css`\r\n  ${upDownWide} 18s ease-in-out infinite alternate;\r\n`\r\n\r\nexport function UpDown({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <div\r\n      css={css`\r\n        animation: ${upDownAnimation};\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n      `}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function UpDownWide({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <div\r\n      css={css`\r\n        animation: ${upDownWideAnimation};\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n      `}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const waveAnimation = (length: string) => `${wave} ${length} linear infinite alternate`\r\n","export const hidden = [`none`, `none`, `block`]\r\n","import * as React from \"react\"\r\nimport { Parallax } from \"@react-spring/parallax\"\r\nimport Layout from \"../components/layout\"\r\nimport Hero from \"../components/hero\"\r\nimport Projects from \"../components/projects\"\r\nimport About from \"../components/about\"\r\nimport Contact from \"../components/contact\"\r\n\r\nconst Cara = () => (\r\n  <Layout>\r\n    <Parallax pages={5}>\r\n      <Hero offset={0} factor={1} />\r\n      <Projects offset={1} factor={2} />\r\n      <About offset={3} factor={1} />\r\n      <Contact offset={4} factor={1} />\r\n    </Parallax>\r\n  </Layout>\r\n)\r\n\r\nexport default Cara\r\n"],"names":["React","mdx","_frontmatter","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent","makeShortcode","name","MDXDefaultShortcode","console","warn","ProjectCard","Divider","Inner","Content","Svg","UpDown","UpDownWide","AboutMDX","About","offset","factor","jsx","waveAnimation","Footer","ContactMDX","Contact","position","bottom","width","transform","height","svg","path","animation","Box","Flex","Link","useColorMode","colorMode","setColorMode","isDark","toggleColorMode","e","variant","fontWeight","display","mx","mb","Date","getFullYear","justifyContent","alignItems","mt","color","a","ml","Intro","Hero","get","Global","SEO","Layout","children","className","t","boxSizing","html","fontSize","WebkitTextSizeAdjust","img","borderStyle","pre","fontFamily","backgroundColor","ProjectsMDX","Projects","clipPath","gridGap","gridTemplateColumns","h2","gridColumn","Helmet","withPrefix","useSiteMetadata","title","description","pathname","image","site","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteLanguage","siteImage","defaultImage","author","seo","url","hidden","icons","triangle","shape","viewBox","circle","arrowUp","upDown","box","hexa","cross","stroke","icon","left","top","hiddenMobile","fill","ParallaxLayer","speed","padding","flexDirection","zIndex","bg","background","textAlign","data","siteMetadata","keyframes","css","wave","upDownWide","upDownAnimation","upDownWideAnimation","length","Parallax","Cara"],"sourceRoot":""}